//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18063
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Protocol.Types.Connection
{
    using System.Collections.Generic;
    using System;
    using Protocol.IO.BigEndian;
    using Protocol.Messages;
    
    
    public class GameServerInformations : AbstractNetworkMessage
    {
        
        public const int Id = 25;
        
        public override int ProtocolId
        {
            get
            {
                return Id;
            }
        }
        
        private ushort m_ObjectId;
        
        public virtual ushort ObjectId
        {
            get
            {
                return m_ObjectId;
            }
            set
            {
                m_ObjectId = value;
            }
        }
        
        private byte m_status;
        
        public virtual byte Status
        {
            get
            {
                return m_status;
            }
            set
            {
                m_status = value;
            }
        }
        
        private byte m_completion;
        
        public virtual byte Completion
        {
            get
            {
                return m_completion;
            }
            set
            {
                m_completion = value;
            }
        }
        
        private bool m_isSelectable;
        
        public virtual bool IsSelectable
        {
            get
            {
                return m_isSelectable;
            }
            set
            {
                m_isSelectable = value;
            }
        }
        
        private byte m_charactersCount;
        
        public virtual byte CharactersCount
        {
            get
            {
                return m_charactersCount;
            }
            set
            {
                m_charactersCount = value;
            }
        }
        
        private double m_date;
        
        public virtual double Date
        {
            get
            {
                return m_date;
            }
            set
            {
                m_date = value;
            }
        }
        
        public void Initiate(ushort objectId, byte status, byte completion, bool isSelectable, byte charactersCount, double date)
        {
            m_ObjectId = objectId;
            m_status = status;
            m_completion = completion;
            m_isSelectable = isSelectable;
            m_charactersCount = charactersCount;
            m_date = date;
        }
        
        public override void Serialize(BigEndianWriter writer)
        {
            writer.WriteVarUhShort(m_ObjectId);
            writer.WriteByte(m_status);
            writer.WriteByte(m_completion);
            writer.WriteBoolean(m_isSelectable);
            writer.WriteByte(m_charactersCount);
            writer.WriteDouble(m_date);
        }
        
        public override void Deserialize(BigEndianReader reader)
        {
            m_ObjectId = reader.ReadVarUhShort();
            m_status = reader.ReadByte();
            m_completion = reader.ReadByte();
            m_isSelectable = reader.ReadBoolean();
            m_charactersCount = reader.ReadByte();
            m_date = reader.ReadDouble();
        }
    }
}
