//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18063
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Protocol.Messages.Connection
{
    using System.Collections.Generic;
    using System;
    using Protocol.IO.BigEndian;
    
    
    public class SelectedServerDataExtendedMessage : SelectedServerDataMessage
    {
        
        public const int Id = 6469;
        
        public override int ProtocolId
        {
            get
            {
                return Id;
            }
        }
        
        private List<System.UInt16> m_serverIds;
        
        public virtual List<System.UInt16> ServerIds
        {
            get
            {
                return m_serverIds;
            }
            set
            {
                m_serverIds = value;
            }
        }
        
        public void Initiate(List<System.UInt16> serverIds)
        {
            m_serverIds = serverIds;
        }
        
        public override void Serialize(BigEndianWriter writer)
        {
            base.Serialize(writer);
            writer.WriteShort(((short)(m_serverIds.Count)));
            int serverIdsIndex;
            for (serverIdsIndex = 0; (serverIdsIndex < m_serverIds.Count); serverIdsIndex = (serverIdsIndex + 1))
            {
                writer.WriteVarUhShort(m_serverIds[serverIdsIndex]);
            }
        }
        
        public override void Deserialize(BigEndianReader reader)
        {
            base.Deserialize(reader);
            int serverIdsCount = reader.ReadUShort();
            int serverIdsIndex;
            m_serverIds = new System.Collections.Generic.List<ushort>();
            for (serverIdsIndex = 0; (serverIdsIndex < serverIdsCount); serverIdsIndex = (serverIdsIndex + 1))
            {
                m_serverIds.Add(reader.ReadVarUShort());
            }
        }
    }
}
