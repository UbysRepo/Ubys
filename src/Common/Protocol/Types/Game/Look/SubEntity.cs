//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18063
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Common.Protocol.Network.Types.Game.Look
{
    using System.Collections.Generic;
    using System;
    
    
    public class SubEntity : NetworkType
    {
        
        public const int Id = 54;
        
        public override int ProtocolId
        {
            get
            {
                return Id;
            }
        }
        
        private byte m_bindingPointCategory;
        
        public virtual byte BindingPointCategory
        {
            get
            {
                return m_bindingPointCategory;
            }
            set
            {
                m_bindingPointCategory = value;
            }
        }
        
        private byte m_bindingPointIndex;
        
        public virtual byte BindingPointIndex
        {
            get
            {
                return m_bindingPointIndex;
            }
            set
            {
                m_bindingPointIndex = value;
            }
        }
        
        private EntityLook m_subEntityLook;
        
        public virtual EntityLook SubEntityLook
        {
            get
            {
                return m_subEntityLook;
            }
            set
            {
                m_subEntityLook = value;
            }
        }
        
        public void Initiate(byte bindingPointCategory, byte bindingPointIndex, EntityLook subEntityLook)
        {
            m_bindingPointCategory = bindingPointCategory;
            m_bindingPointIndex = bindingPointIndex;
            m_subEntityLook = subEntityLook;
        }
        
        public override void Serialize(ICustomDataWriter writer)
        {
            writer.WriteByte(m_bindingPointCategory);
            writer.WriteByte(m_bindingPointIndex);
            m_subEntityLook.Serialize(writer);
        }
        
        public override void Deserialize(ICustomDataReader reader)
        {
            m_bindingPointCategory = reader.ReadByte();
            m_bindingPointIndex = reader.ReadByte();
            m_subEntityLook = new EntityLook();
            m_subEntityLook.Deserialize(reader);
        }
    }
}
