//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18063
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Common.Protocol.Network.Types.Game.Startup
{
    using Common.Protocol.Network.Types.Game.Data.Items;
    using System.Collections.Generic;
    using System;
    
    
    public class StartupActionAddObject : NetworkType
    {
        
        public const int Id = 52;
        
        public override int ProtocolId
        {
            get
            {
                return Id;
            }
        }
        
        private int m_uid;
        
        public virtual int Uid
        {
            get
            {
                return m_uid;
            }
            set
            {
                m_uid = value;
            }
        }
        
        private string m_title;
        
        public virtual string Title
        {
            get
            {
                return m_title;
            }
            set
            {
                m_title = value;
            }
        }
        
        private string m_text;
        
        public virtual string Text
        {
            get
            {
                return m_text;
            }
            set
            {
                m_text = value;
            }
        }
        
        private string m_descUrl;
        
        public virtual string DescUrl
        {
            get
            {
                return m_descUrl;
            }
            set
            {
                m_descUrl = value;
            }
        }
        
        private string m_pictureUrl;
        
        public virtual string PictureUrl
        {
            get
            {
                return m_pictureUrl;
            }
            set
            {
                m_pictureUrl = value;
            }
        }
        
        private List<ObjectItemInformationWithQuantity> m_items;
        
        public virtual List<ObjectItemInformationWithQuantity> Items
        {
            get
            {
                return m_items;
            }
            set
            {
                m_items = value;
            }
        }
        
        public void Initiate(int uid, string title, string text, string descUrl, string pictureUrl, List<ObjectItemInformationWithQuantity> items)
        {
            m_uid = uid;
            m_title = title;
            m_text = text;
            m_descUrl = descUrl;
            m_pictureUrl = pictureUrl;
            m_items = items;
        }
        
        public override void Serialize(ICustomDataWriter writer)
        {
            writer.WriteInt(m_uid);
            writer.WriteUTF(m_title);
            writer.WriteUTF(m_text);
            writer.WriteUTF(m_descUrl);
            writer.WriteUTF(m_pictureUrl);
            writer.WriteShort(((short)(m_items.Count)));
            int itemsIndex;
            for (itemsIndex = 0; (itemsIndex < m_items.Count); itemsIndex = (itemsIndex + 1))
            {
                ObjectItemInformationWithQuantity objectToSend = m_items[itemsIndex];
                objectToSend.Serialize(writer);
            }
        }
        
        public override void Deserialize(ICustomDataReader reader)
        {
            m_uid = reader.ReadInt();
            m_title = reader.ReadUTF();
            m_text = reader.ReadUTF();
            m_descUrl = reader.ReadUTF();
            m_pictureUrl = reader.ReadUTF();
            int itemsCount = reader.ReadUShort();
            int itemsIndex;
            m_items = new System.Collections.Generic.List<ObjectItemInformationWithQuantity>();
            for (itemsIndex = 0; (itemsIndex < itemsCount); itemsIndex = (itemsIndex + 1))
            {
                ObjectItemInformationWithQuantity objectToAdd = new ObjectItemInformationWithQuantity();
                objectToAdd.Deserialize(reader);
                m_items.Add(objectToAdd);
            }
        }
    }
}
