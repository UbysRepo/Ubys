//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18063
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Common.Protocol.Network.Types.Game.Context.Roleplay
{
    using Common.Protocol.Network.Types.Game.Look;
    using Common.Protocol.Network.Types.Game.Context;
    using Common.Protocol.Network;
    using System.Collections.Generic;
    using System;
    
    
    public class GameRolePlayGroupMonsterInformations : GameRolePlayActorInformations
    {
        
        public const int Id = 160;
        
        public override int ProtocolId
        {
            get
            {
                return Id;
            }
        }
        
        private bool m_keyRingBonus;
        
        public virtual bool KeyRingBonus
        {
            get
            {
                return m_keyRingBonus;
            }
            set
            {
                m_keyRingBonus = value;
            }
        }
        
        private bool m_hasHardcoreDrop;
        
        public virtual bool HasHardcoreDrop
        {
            get
            {
                return m_hasHardcoreDrop;
            }
            set
            {
                m_hasHardcoreDrop = value;
            }
        }
        
        private bool m_hasAVARewardToken;
        
        public virtual bool HasAVARewardToken
        {
            get
            {
                return m_hasAVARewardToken;
            }
            set
            {
                m_hasAVARewardToken = value;
            }
        }
        
        private GroupMonsterStaticInformations m_staticInfos;
        
        public virtual GroupMonsterStaticInformations StaticInfos
        {
            get
            {
                return m_staticInfos;
            }
            set
            {
                m_staticInfos = value;
            }
        }
        
        private short m_ageBonus;
        
        public virtual short AgeBonus
        {
            get
            {
                return m_ageBonus;
            }
            set
            {
                m_ageBonus = value;
            }
        }
        
        private byte m_lootShare;
        
        public virtual byte LootShare
        {
            get
            {
                return m_lootShare;
            }
            set
            {
                m_lootShare = value;
            }
        }
        
        private byte m_alignmentSide;
        
        public virtual byte AlignmentSide
        {
            get
            {
                return m_alignmentSide;
            }
            set
            {
                m_alignmentSide = value;
            }
        }
        
        public void Initiate(bool keyRingBonus, bool hasHardcoreDrop, bool hasAVARewardToken, GroupMonsterStaticInformations staticInfos, short ageBonus, byte lootShare, byte alignmentSide)
        {
            m_keyRingBonus = keyRingBonus;
            m_hasHardcoreDrop = hasHardcoreDrop;
            m_hasAVARewardToken = hasAVARewardToken;
            m_staticInfos = staticInfos;
            m_ageBonus = ageBonus;
            m_lootShare = lootShare;
            m_alignmentSide = alignmentSide;
        }
        
        public override void Serialize(ICustomDataWriter writer)
        {
            base.Serialize(writer);
            byte flag = new byte();
            BooleanByteWrapper.SetFlag(0, flag, m_keyRingBonus);
            BooleanByteWrapper.SetFlag(1, flag, m_hasHardcoreDrop);
            BooleanByteWrapper.SetFlag(2, flag, m_hasAVARewardToken);
            writer.WriteByte(flag);
            writer.WriteUShort(((ushort)(m_staticInfos.ProtocolId)));
            m_staticInfos.Serialize(writer);
            writer.WriteShort(m_ageBonus);
            writer.WriteByte(m_lootShare);
            writer.WriteByte(m_alignmentSide);
        }
        
        public override void Deserialize(ICustomDataReader reader)
        {
            base.Deserialize(reader);
            byte flag = reader.ReadByte();
            m_keyRingBonus = BooleanByteWrapper.GetFlag(flag, 0);
            m_hasHardcoreDrop = BooleanByteWrapper.GetFlag(flag, 1);
            m_hasAVARewardToken = BooleanByteWrapper.GetFlag(flag, 2);
            m_staticInfos = ProtocolManager.GetTypeInstance<GroupMonsterStaticInformations>(reader.ReadUShort());
            m_staticInfos.Deserialize(reader);
            m_ageBonus = reader.ReadShort();
            m_lootShare = reader.ReadByte();
            m_alignmentSide = reader.ReadByte();
        }
    }
}
