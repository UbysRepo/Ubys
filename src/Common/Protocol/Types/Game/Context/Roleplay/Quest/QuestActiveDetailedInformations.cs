//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18063
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Common.Protocol.Network.Types.Game.Context.Roleplay.Quest
{
    using Common.Protocol.Network;
    using System.Collections.Generic;
    using System;
    
    
    public class QuestActiveDetailedInformations : QuestActiveInformations
    {
        
        public const int Id = 382;
        
        public override int ProtocolId
        {
            get
            {
                return Id;
            }
        }
        
        private ushort m_stepId;
        
        public virtual ushort StepId
        {
            get
            {
                return m_stepId;
            }
            set
            {
                m_stepId = value;
            }
        }
        
        private List<QuestObjectiveInformations> m_objectives;
        
        public virtual List<QuestObjectiveInformations> Objectives
        {
            get
            {
                return m_objectives;
            }
            set
            {
                m_objectives = value;
            }
        }
        
        public void Initiate(ushort stepId, List<QuestObjectiveInformations> objectives)
        {
            m_stepId = stepId;
            m_objectives = objectives;
        }
        
        public override void Serialize(ICustomDataWriter writer)
        {
            base.Serialize(writer);
            writer.WriteVarUhShort(m_stepId);
            writer.WriteShort(((short)(m_objectives.Count)));
            int objectivesIndex;
            for (objectivesIndex = 0; (objectivesIndex < m_objectives.Count); objectivesIndex = (objectivesIndex + 1))
            {
                QuestObjectiveInformations objectToSend = m_objectives[objectivesIndex];
                writer.WriteUShort(((ushort)(objectToSend.ProtocolId)));
                objectToSend.Serialize(writer);
            }
        }
        
        public override void Deserialize(ICustomDataReader reader)
        {
            base.Deserialize(reader);
            m_stepId = reader.ReadVarUhShort();
            int objectivesCount = reader.ReadUShort();
            int objectivesIndex;
            m_objectives = new System.Collections.Generic.List<QuestObjectiveInformations>();
            for (objectivesIndex = 0; (objectivesIndex < objectivesCount); objectivesIndex = (objectivesIndex + 1))
            {
                QuestObjectiveInformations objectToAdd = ProtocolManager.GetTypeInstance<QuestObjectiveInformations>(reader.ReadUShort());
                objectToAdd.Deserialize(reader);
                m_objectives.Add(objectToAdd);
            }
        }
    }
}
