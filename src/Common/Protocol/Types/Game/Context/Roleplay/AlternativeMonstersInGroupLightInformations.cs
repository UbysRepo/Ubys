//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18063
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Common.Protocol.Network.Types.Game.Context.Roleplay
{
    using System.Collections.Generic;
    using System;
    
    
    public class AlternativeMonstersInGroupLightInformations : NetworkType
    {
        
        public const int Id = 394;
        
        public override int ProtocolId
        {
            get
            {
                return Id;
            }
        }
        
        private int m_playerCount;
        
        public virtual int PlayerCount
        {
            get
            {
                return m_playerCount;
            }
            set
            {
                m_playerCount = value;
            }
        }
        
        private List<MonsterInGroupLightInformations> m_monsters;
        
        public virtual List<MonsterInGroupLightInformations> Monsters
        {
            get
            {
                return m_monsters;
            }
            set
            {
                m_monsters = value;
            }
        }
        
        public void Initiate(int playerCount, List<MonsterInGroupLightInformations> monsters)
        {
            m_playerCount = playerCount;
            m_monsters = monsters;
        }
        
        public override void Serialize(ICustomDataWriter writer)
        {
            writer.WriteInt(m_playerCount);
            writer.WriteShort(((short)(m_monsters.Count)));
            int monstersIndex;
            for (monstersIndex = 0; (monstersIndex < m_monsters.Count); monstersIndex = (monstersIndex + 1))
            {
                MonsterInGroupLightInformations objectToSend = m_monsters[monstersIndex];
                objectToSend.Serialize(writer);
            }
        }
        
        public override void Deserialize(ICustomDataReader reader)
        {
            m_playerCount = reader.ReadInt();
            int monstersCount = reader.ReadUShort();
            int monstersIndex;
            m_monsters = new System.Collections.Generic.List<MonsterInGroupLightInformations>();
            for (monstersIndex = 0; (monstersIndex < monstersCount); monstersIndex = (monstersIndex + 1))
            {
                MonsterInGroupLightInformations objectToAdd = new MonsterInGroupLightInformations();
                objectToAdd.Deserialize(reader);
                m_monsters.Add(objectToAdd);
            }
        }
    }
}
