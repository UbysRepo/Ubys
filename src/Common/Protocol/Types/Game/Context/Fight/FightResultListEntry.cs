//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18063
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Common.Protocol.Network.Types.Game.Context.Fight
{
    using System.Collections.Generic;
    using System;
    
    
    public class FightResultListEntry : NetworkType
    {
        
        public const int Id = 16;
        
        public override int ProtocolId
        {
            get
            {
                return Id;
            }
        }
        
        private ushort m_outcome;
        
        public virtual ushort Outcome
        {
            get
            {
                return m_outcome;
            }
            set
            {
                m_outcome = value;
            }
        }
        
        private byte m_wave;
        
        public virtual byte Wave
        {
            get
            {
                return m_wave;
            }
            set
            {
                m_wave = value;
            }
        }
        
        private FightLoot m_rewards;
        
        public virtual FightLoot Rewards
        {
            get
            {
                return m_rewards;
            }
            set
            {
                m_rewards = value;
            }
        }
        
        public void Initiate(ushort outcome, byte wave, FightLoot rewards)
        {
            m_outcome = outcome;
            m_wave = wave;
            m_rewards = rewards;
        }
        
        public override void Serialize(ICustomDataWriter writer)
        {
            writer.WriteVarUhShort(m_outcome);
            writer.WriteByte(m_wave);
            m_rewards.Serialize(writer);
        }
        
        public override void Deserialize(ICustomDataReader reader)
        {
            m_outcome = reader.ReadVarUhShort();
            m_wave = reader.ReadByte();
            m_rewards = new FightLoot();
            m_rewards.Deserialize(reader);
        }
    }
}
