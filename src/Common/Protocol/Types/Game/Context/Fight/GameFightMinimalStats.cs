//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18063
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Common.Protocol.Network.Types.Game.Context.Fight
{
    using System.Collections.Generic;
    using System;
    
    
    public class GameFightMinimalStats : NetworkType
    {
        
        public const int Id = 31;
        
        public override int ProtocolId
        {
            get
            {
                return Id;
            }
        }
        
        private uint m_lifePoints;
        
        public virtual uint LifePoints
        {
            get
            {
                return m_lifePoints;
            }
            set
            {
                m_lifePoints = value;
            }
        }
        
        private uint m_maxLifePoints;
        
        public virtual uint MaxLifePoints
        {
            get
            {
                return m_maxLifePoints;
            }
            set
            {
                m_maxLifePoints = value;
            }
        }
        
        private uint m_baseMaxLifePoints;
        
        public virtual uint BaseMaxLifePoints
        {
            get
            {
                return m_baseMaxLifePoints;
            }
            set
            {
                m_baseMaxLifePoints = value;
            }
        }
        
        private uint m_permanentDamagePercent;
        
        public virtual uint PermanentDamagePercent
        {
            get
            {
                return m_permanentDamagePercent;
            }
            set
            {
                m_permanentDamagePercent = value;
            }
        }
        
        private uint m_shieldPoints;
        
        public virtual uint ShieldPoints
        {
            get
            {
                return m_shieldPoints;
            }
            set
            {
                m_shieldPoints = value;
            }
        }
        
        private short m_actionPoints;
        
        public virtual short ActionPoints
        {
            get
            {
                return m_actionPoints;
            }
            set
            {
                m_actionPoints = value;
            }
        }
        
        private short m_maxActionPoints;
        
        public virtual short MaxActionPoints
        {
            get
            {
                return m_maxActionPoints;
            }
            set
            {
                m_maxActionPoints = value;
            }
        }
        
        private short m_movementPoints;
        
        public virtual short MovementPoints
        {
            get
            {
                return m_movementPoints;
            }
            set
            {
                m_movementPoints = value;
            }
        }
        
        private short m_maxMovementPoints;
        
        public virtual short MaxMovementPoints
        {
            get
            {
                return m_maxMovementPoints;
            }
            set
            {
                m_maxMovementPoints = value;
            }
        }
        
        private int m_summoner;
        
        public virtual int Summoner
        {
            get
            {
                return m_summoner;
            }
            set
            {
                m_summoner = value;
            }
        }
        
        private bool m_summoned;
        
        public virtual bool Summoned
        {
            get
            {
                return m_summoned;
            }
            set
            {
                m_summoned = value;
            }
        }
        
        private short m_neutralElementResistPercent;
        
        public virtual short NeutralElementResistPercent
        {
            get
            {
                return m_neutralElementResistPercent;
            }
            set
            {
                m_neutralElementResistPercent = value;
            }
        }
        
        private short m_earthElementResistPercent;
        
        public virtual short EarthElementResistPercent
        {
            get
            {
                return m_earthElementResistPercent;
            }
            set
            {
                m_earthElementResistPercent = value;
            }
        }
        
        private short m_waterElementResistPercent;
        
        public virtual short WaterElementResistPercent
        {
            get
            {
                return m_waterElementResistPercent;
            }
            set
            {
                m_waterElementResistPercent = value;
            }
        }
        
        private short m_airElementResistPercent;
        
        public virtual short AirElementResistPercent
        {
            get
            {
                return m_airElementResistPercent;
            }
            set
            {
                m_airElementResistPercent = value;
            }
        }
        
        private short m_fireElementResistPercent;
        
        public virtual short FireElementResistPercent
        {
            get
            {
                return m_fireElementResistPercent;
            }
            set
            {
                m_fireElementResistPercent = value;
            }
        }
        
        private short m_neutralElementReduction;
        
        public virtual short NeutralElementReduction
        {
            get
            {
                return m_neutralElementReduction;
            }
            set
            {
                m_neutralElementReduction = value;
            }
        }
        
        private short m_earthElementReduction;
        
        public virtual short EarthElementReduction
        {
            get
            {
                return m_earthElementReduction;
            }
            set
            {
                m_earthElementReduction = value;
            }
        }
        
        private short m_waterElementReduction;
        
        public virtual short WaterElementReduction
        {
            get
            {
                return m_waterElementReduction;
            }
            set
            {
                m_waterElementReduction = value;
            }
        }
        
        private short m_airElementReduction;
        
        public virtual short AirElementReduction
        {
            get
            {
                return m_airElementReduction;
            }
            set
            {
                m_airElementReduction = value;
            }
        }
        
        private short m_fireElementReduction;
        
        public virtual short FireElementReduction
        {
            get
            {
                return m_fireElementReduction;
            }
            set
            {
                m_fireElementReduction = value;
            }
        }
        
        private short m_criticalDamageFixedResist;
        
        public virtual short CriticalDamageFixedResist
        {
            get
            {
                return m_criticalDamageFixedResist;
            }
            set
            {
                m_criticalDamageFixedResist = value;
            }
        }
        
        private short m_pushDamageFixedResist;
        
        public virtual short PushDamageFixedResist
        {
            get
            {
                return m_pushDamageFixedResist;
            }
            set
            {
                m_pushDamageFixedResist = value;
            }
        }
        
        private ushort m_dodgePALostProbability;
        
        public virtual ushort DodgePALostProbability
        {
            get
            {
                return m_dodgePALostProbability;
            }
            set
            {
                m_dodgePALostProbability = value;
            }
        }
        
        private ushort m_dodgePMLostProbability;
        
        public virtual ushort DodgePMLostProbability
        {
            get
            {
                return m_dodgePMLostProbability;
            }
            set
            {
                m_dodgePMLostProbability = value;
            }
        }
        
        private short m_tackleBlock;
        
        public virtual short TackleBlock
        {
            get
            {
                return m_tackleBlock;
            }
            set
            {
                m_tackleBlock = value;
            }
        }
        
        private short m_tackleEvade;
        
        public virtual short TackleEvade
        {
            get
            {
                return m_tackleEvade;
            }
            set
            {
                m_tackleEvade = value;
            }
        }
        
        private byte m_invisibilityState;
        
        public virtual byte InvisibilityState
        {
            get
            {
                return m_invisibilityState;
            }
            set
            {
                m_invisibilityState = value;
            }
        }
        
        public void Initiate(
                    uint lifePoints, 
                    uint maxLifePoints, 
                    uint baseMaxLifePoints, 
                    uint permanentDamagePercent, 
                    uint shieldPoints, 
                    short actionPoints, 
                    short maxActionPoints, 
                    short movementPoints, 
                    short maxMovementPoints, 
                    int summoner, 
                    bool summoned, 
                    short neutralElementResistPercent, 
                    short earthElementResistPercent, 
                    short waterElementResistPercent, 
                    short airElementResistPercent, 
                    short fireElementResistPercent, 
                    short neutralElementReduction, 
                    short earthElementReduction, 
                    short waterElementReduction, 
                    short airElementReduction, 
                    short fireElementReduction, 
                    short criticalDamageFixedResist, 
                    short pushDamageFixedResist, 
                    ushort dodgePALostProbability, 
                    ushort dodgePMLostProbability, 
                    short tackleBlock, 
                    short tackleEvade, 
                    byte invisibilityState)
        {
            m_lifePoints = lifePoints;
            m_maxLifePoints = maxLifePoints;
            m_baseMaxLifePoints = baseMaxLifePoints;
            m_permanentDamagePercent = permanentDamagePercent;
            m_shieldPoints = shieldPoints;
            m_actionPoints = actionPoints;
            m_maxActionPoints = maxActionPoints;
            m_movementPoints = movementPoints;
            m_maxMovementPoints = maxMovementPoints;
            m_summoner = summoner;
            m_summoned = summoned;
            m_neutralElementResistPercent = neutralElementResistPercent;
            m_earthElementResistPercent = earthElementResistPercent;
            m_waterElementResistPercent = waterElementResistPercent;
            m_airElementResistPercent = airElementResistPercent;
            m_fireElementResistPercent = fireElementResistPercent;
            m_neutralElementReduction = neutralElementReduction;
            m_earthElementReduction = earthElementReduction;
            m_waterElementReduction = waterElementReduction;
            m_airElementReduction = airElementReduction;
            m_fireElementReduction = fireElementReduction;
            m_criticalDamageFixedResist = criticalDamageFixedResist;
            m_pushDamageFixedResist = pushDamageFixedResist;
            m_dodgePALostProbability = dodgePALostProbability;
            m_dodgePMLostProbability = dodgePMLostProbability;
            m_tackleBlock = tackleBlock;
            m_tackleEvade = tackleEvade;
            m_invisibilityState = invisibilityState;
        }
        
        public override void Serialize(ICustomDataWriter writer)
        {
            writer.WriteVarUhInt(m_lifePoints);
            writer.WriteVarUhInt(m_maxLifePoints);
            writer.WriteVarUhInt(m_baseMaxLifePoints);
            writer.WriteVarUhInt(m_permanentDamagePercent);
            writer.WriteVarUhInt(m_shieldPoints);
            writer.WriteVarShort(m_actionPoints);
            writer.WriteVarShort(m_maxActionPoints);
            writer.WriteVarShort(m_movementPoints);
            writer.WriteVarShort(m_maxMovementPoints);
            writer.WriteInt(m_summoner);
            writer.WriteBoolean(m_summoned);
            writer.WriteVarShort(m_neutralElementResistPercent);
            writer.WriteVarShort(m_earthElementResistPercent);
            writer.WriteVarShort(m_waterElementResistPercent);
            writer.WriteVarShort(m_airElementResistPercent);
            writer.WriteVarShort(m_fireElementResistPercent);
            writer.WriteVarShort(m_neutralElementReduction);
            writer.WriteVarShort(m_earthElementReduction);
            writer.WriteVarShort(m_waterElementReduction);
            writer.WriteVarShort(m_airElementReduction);
            writer.WriteVarShort(m_fireElementReduction);
            writer.WriteVarShort(m_criticalDamageFixedResist);
            writer.WriteVarShort(m_pushDamageFixedResist);
            writer.WriteVarUhShort(m_dodgePALostProbability);
            writer.WriteVarUhShort(m_dodgePMLostProbability);
            writer.WriteVarShort(m_tackleBlock);
            writer.WriteVarShort(m_tackleEvade);
            writer.WriteByte(m_invisibilityState);
        }
        
        public override void Deserialize(ICustomDataReader reader)
        {
            m_lifePoints = reader.ReadVarUhInt();
            m_maxLifePoints = reader.ReadVarUhInt();
            m_baseMaxLifePoints = reader.ReadVarUhInt();
            m_permanentDamagePercent = reader.ReadVarUhInt();
            m_shieldPoints = reader.ReadVarUhInt();
            m_actionPoints = reader.ReadVarShort();
            m_maxActionPoints = reader.ReadVarShort();
            m_movementPoints = reader.ReadVarShort();
            m_maxMovementPoints = reader.ReadVarShort();
            m_summoner = reader.ReadInt();
            m_summoned = reader.ReadBoolean();
            m_neutralElementResistPercent = reader.ReadVarShort();
            m_earthElementResistPercent = reader.ReadVarShort();
            m_waterElementResistPercent = reader.ReadVarShort();
            m_airElementResistPercent = reader.ReadVarShort();
            m_fireElementResistPercent = reader.ReadVarShort();
            m_neutralElementReduction = reader.ReadVarShort();
            m_earthElementReduction = reader.ReadVarShort();
            m_waterElementReduction = reader.ReadVarShort();
            m_airElementReduction = reader.ReadVarShort();
            m_fireElementReduction = reader.ReadVarShort();
            m_criticalDamageFixedResist = reader.ReadVarShort();
            m_pushDamageFixedResist = reader.ReadVarShort();
            m_dodgePALostProbability = reader.ReadVarUhShort();
            m_dodgePMLostProbability = reader.ReadVarUhShort();
            m_tackleBlock = reader.ReadVarShort();
            m_tackleEvade = reader.ReadVarShort();
            m_invisibilityState = reader.ReadByte();
        }
    }
}
