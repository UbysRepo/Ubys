//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18063
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Common.Protocol.Network.Types.Game.Context.Fight
{
    using System.Collections.Generic;
    using System;
    
    
    public class FightResultExperienceData : FightResultAdditionalData
    {
        
        public const int Id = 192;
        
        public override int ProtocolId
        {
            get
            {
                return Id;
            }
        }
        
        private bool m_showExperience;
        
        public virtual bool ShowExperience
        {
            get
            {
                return m_showExperience;
            }
            set
            {
                m_showExperience = value;
            }
        }
        
        private bool m_showExperienceLevelFloor;
        
        public virtual bool ShowExperienceLevelFloor
        {
            get
            {
                return m_showExperienceLevelFloor;
            }
            set
            {
                m_showExperienceLevelFloor = value;
            }
        }
        
        private bool m_showExperienceNextLevelFloor;
        
        public virtual bool ShowExperienceNextLevelFloor
        {
            get
            {
                return m_showExperienceNextLevelFloor;
            }
            set
            {
                m_showExperienceNextLevelFloor = value;
            }
        }
        
        private bool m_showExperienceFightDelta;
        
        public virtual bool ShowExperienceFightDelta
        {
            get
            {
                return m_showExperienceFightDelta;
            }
            set
            {
                m_showExperienceFightDelta = value;
            }
        }
        
        private bool m_showExperienceForGuild;
        
        public virtual bool ShowExperienceForGuild
        {
            get
            {
                return m_showExperienceForGuild;
            }
            set
            {
                m_showExperienceForGuild = value;
            }
        }
        
        private bool m_showExperienceForMount;
        
        public virtual bool ShowExperienceForMount
        {
            get
            {
                return m_showExperienceForMount;
            }
            set
            {
                m_showExperienceForMount = value;
            }
        }
        
        private bool m_isIncarnationExperience;
        
        public virtual bool IsIncarnationExperience
        {
            get
            {
                return m_isIncarnationExperience;
            }
            set
            {
                m_isIncarnationExperience = value;
            }
        }
        
        private ulong m_experience;
        
        public virtual ulong Experience
        {
            get
            {
                return m_experience;
            }
            set
            {
                m_experience = value;
            }
        }
        
        private ulong m_experienceLevelFloor;
        
        public virtual ulong ExperienceLevelFloor
        {
            get
            {
                return m_experienceLevelFloor;
            }
            set
            {
                m_experienceLevelFloor = value;
            }
        }
        
        private double m_experienceNextLevelFloor;
        
        public virtual double ExperienceNextLevelFloor
        {
            get
            {
                return m_experienceNextLevelFloor;
            }
            set
            {
                m_experienceNextLevelFloor = value;
            }
        }
        
        private int m_experienceFightDelta;
        
        public virtual int ExperienceFightDelta
        {
            get
            {
                return m_experienceFightDelta;
            }
            set
            {
                m_experienceFightDelta = value;
            }
        }
        
        private uint m_experienceForGuild;
        
        public virtual uint ExperienceForGuild
        {
            get
            {
                return m_experienceForGuild;
            }
            set
            {
                m_experienceForGuild = value;
            }
        }
        
        private uint m_experienceForMount;
        
        public virtual uint ExperienceForMount
        {
            get
            {
                return m_experienceForMount;
            }
            set
            {
                m_experienceForMount = value;
            }
        }
        
        private byte m_rerollExperienceMul;
        
        public virtual byte RerollExperienceMul
        {
            get
            {
                return m_rerollExperienceMul;
            }
            set
            {
                m_rerollExperienceMul = value;
            }
        }
        
        public void Initiate(bool showExperience, bool showExperienceLevelFloor, bool showExperienceNextLevelFloor, bool showExperienceFightDelta, bool showExperienceForGuild, bool showExperienceForMount, bool isIncarnationExperience, ulong experience, ulong experienceLevelFloor, double experienceNextLevelFloor, int experienceFightDelta, uint experienceForGuild, uint experienceForMount, byte rerollExperienceMul)
        {
            m_showExperience = showExperience;
            m_showExperienceLevelFloor = showExperienceLevelFloor;
            m_showExperienceNextLevelFloor = showExperienceNextLevelFloor;
            m_showExperienceFightDelta = showExperienceFightDelta;
            m_showExperienceForGuild = showExperienceForGuild;
            m_showExperienceForMount = showExperienceForMount;
            m_isIncarnationExperience = isIncarnationExperience;
            m_experience = experience;
            m_experienceLevelFloor = experienceLevelFloor;
            m_experienceNextLevelFloor = experienceNextLevelFloor;
            m_experienceFightDelta = experienceFightDelta;
            m_experienceForGuild = experienceForGuild;
            m_experienceForMount = experienceForMount;
            m_rerollExperienceMul = rerollExperienceMul;
        }
        
        public override void Serialize(ICustomDataWriter writer)
        {
            base.Serialize(writer);
            byte flag = new byte();
            BooleanByteWrapper.SetFlag(0, flag, m_showExperience);
            BooleanByteWrapper.SetFlag(1, flag, m_showExperienceLevelFloor);
            BooleanByteWrapper.SetFlag(2, flag, m_showExperienceNextLevelFloor);
            BooleanByteWrapper.SetFlag(3, flag, m_showExperienceFightDelta);
            BooleanByteWrapper.SetFlag(4, flag, m_showExperienceForGuild);
            BooleanByteWrapper.SetFlag(5, flag, m_showExperienceForMount);
            BooleanByteWrapper.SetFlag(6, flag, m_isIncarnationExperience);
            writer.WriteByte(flag);
            writer.WriteVarUhLong(m_experience);
            writer.WriteVarUhLong(m_experienceLevelFloor);
            writer.WriteDouble(m_experienceNextLevelFloor);
            writer.WriteVarInt(m_experienceFightDelta);
            writer.WriteVarUhInt(m_experienceForGuild);
            writer.WriteVarUhInt(m_experienceForMount);
            writer.WriteByte(m_rerollExperienceMul);
        }
        
        public override void Deserialize(ICustomDataReader reader)
        {
            base.Deserialize(reader);
            byte flag = reader.ReadByte();
            m_showExperience = BooleanByteWrapper.GetFlag(flag, 0);
            m_showExperienceLevelFloor = BooleanByteWrapper.GetFlag(flag, 1);
            m_showExperienceNextLevelFloor = BooleanByteWrapper.GetFlag(flag, 2);
            m_showExperienceFightDelta = BooleanByteWrapper.GetFlag(flag, 3);
            m_showExperienceForGuild = BooleanByteWrapper.GetFlag(flag, 4);
            m_showExperienceForMount = BooleanByteWrapper.GetFlag(flag, 5);
            m_isIncarnationExperience = BooleanByteWrapper.GetFlag(flag, 6);
            m_experience = reader.ReadVarUhLong();
            m_experienceLevelFloor = reader.ReadVarUhLong();
            m_experienceNextLevelFloor = reader.ReadDouble();
            m_experienceFightDelta = reader.ReadVarInt();
            m_experienceForGuild = reader.ReadVarUhInt();
            m_experienceForMount = reader.ReadVarUhInt();
            m_rerollExperienceMul = reader.ReadByte();
        }
    }
}
