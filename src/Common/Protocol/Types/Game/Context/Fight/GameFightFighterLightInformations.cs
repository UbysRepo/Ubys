//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18063
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Common.Protocol.Network.Types.Game.Context.Fight
{
    using System.Collections.Generic;
    using System;
    
    
    public class GameFightFighterLightInformations : NetworkType
    {
        
        public const int Id = 413;
        
        public override int ProtocolId
        {
            get
            {
                return Id;
            }
        }
        
        private bool m_sex;
        
        public virtual bool Sex
        {
            get
            {
                return m_sex;
            }
            set
            {
                m_sex = value;
            }
        }
        
        private bool m_alive;
        
        public virtual bool Alive
        {
            get
            {
                return m_alive;
            }
            set
            {
                m_alive = value;
            }
        }
        
        private int m_ObjectId;
        
        public virtual int ObjectId
        {
            get
            {
                return m_ObjectId;
            }
            set
            {
                m_ObjectId = value;
            }
        }
        
        private byte m_wave;
        
        public virtual byte Wave
        {
            get
            {
                return m_wave;
            }
            set
            {
                m_wave = value;
            }
        }
        
        private ushort m_level;
        
        public virtual ushort Level
        {
            get
            {
                return m_level;
            }
            set
            {
                m_level = value;
            }
        }
        
        private byte m_breed;
        
        public virtual byte Breed
        {
            get
            {
                return m_breed;
            }
            set
            {
                m_breed = value;
            }
        }
        
        public void Initiate(bool sex, bool alive, int objectId, byte wave, ushort level, byte breed)
        {
            m_sex = sex;
            m_alive = alive;
            m_ObjectId = objectId;
            m_wave = wave;
            m_level = level;
            m_breed = breed;
        }
        
        public override void Serialize(ICustomDataWriter writer)
        {
            byte flag = new byte();
            BooleanByteWrapper.SetFlag(0, flag, m_sex);
            BooleanByteWrapper.SetFlag(1, flag, m_alive);
            writer.WriteByte(flag);
            writer.WriteInt(m_ObjectId);
            writer.WriteByte(m_wave);
            writer.WriteVarUhShort(m_level);
            writer.WriteByte(m_breed);
        }
        
        public override void Deserialize(ICustomDataReader reader)
        {
            byte flag = reader.ReadByte();
            m_sex = BooleanByteWrapper.GetFlag(flag, 0);
            m_alive = BooleanByteWrapper.GetFlag(flag, 1);
            m_ObjectId = reader.ReadInt();
            m_wave = reader.ReadByte();
            m_level = reader.ReadVarUhShort();
            m_breed = reader.ReadByte();
        }
    }
}
