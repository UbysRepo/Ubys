//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18063
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Common.Protocol.Network.Types.Game.House
{
    using System.Collections.Generic;
    using System;
    
    
    public class HouseInformationsInside : NetworkType
    {
        
        public const int Id = 218;
        
        public override int ProtocolId
        {
            get
            {
                return Id;
            }
        }
        
        private uint m_houseId;
        
        public virtual uint HouseId
        {
            get
            {
                return m_houseId;
            }
            set
            {
                m_houseId = value;
            }
        }
        
        private ushort m_modelId;
        
        public virtual ushort ModelId
        {
            get
            {
                return m_modelId;
            }
            set
            {
                m_modelId = value;
            }
        }
        
        private int m_ownerId;
        
        public virtual int OwnerId
        {
            get
            {
                return m_ownerId;
            }
            set
            {
                m_ownerId = value;
            }
        }
        
        private string m_ownerName;
        
        public virtual string OwnerName
        {
            get
            {
                return m_ownerName;
            }
            set
            {
                m_ownerName = value;
            }
        }
        
        private short m_worldX;
        
        public virtual short WorldX
        {
            get
            {
                return m_worldX;
            }
            set
            {
                m_worldX = value;
            }
        }
        
        private short m_worldY;
        
        public virtual short WorldY
        {
            get
            {
                return m_worldY;
            }
            set
            {
                m_worldY = value;
            }
        }
        
        private int m_price;
        
        public virtual int Price
        {
            get
            {
                return m_price;
            }
            set
            {
                m_price = value;
            }
        }
        
        private bool m_isLocked;
        
        public virtual bool IsLocked
        {
            get
            {
                return m_isLocked;
            }
            set
            {
                m_isLocked = value;
            }
        }
        
        public void Initiate(uint houseId, ushort modelId, int ownerId, string ownerName, short worldX, short worldY, int price, bool isLocked)
        {
            m_houseId = houseId;
            m_modelId = modelId;
            m_ownerId = ownerId;
            m_ownerName = ownerName;
            m_worldX = worldX;
            m_worldY = worldY;
            m_price = price;
            m_isLocked = isLocked;
        }
        
        public override void Serialize(ICustomDataWriter writer)
        {
            writer.WriteVarUhInt(m_houseId);
            writer.WriteVarUhShort(m_modelId);
            writer.WriteInt(m_ownerId);
            writer.WriteUTF(m_ownerName);
            writer.WriteShort(m_worldX);
            writer.WriteShort(m_worldY);
            writer.WriteInt(m_price);
            writer.WriteBoolean(m_isLocked);
        }
        
        public override void Deserialize(ICustomDataReader reader)
        {
            m_houseId = reader.ReadVarUhInt();
            m_modelId = reader.ReadVarUhShort();
            m_ownerId = reader.ReadInt();
            m_ownerName = reader.ReadUTF();
            m_worldX = reader.ReadShort();
            m_worldY = reader.ReadShort();
            m_price = reader.ReadInt();
            m_isLocked = reader.ReadBoolean();
        }
    }
}
