//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18063
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Common.Protocol.Network.Types.Game.House
{
    using System.Collections.Generic;
    using System;
    
    
    public class HouseInformationsForGuild : NetworkType
    {
        
        public const int Id = 170;
        
        public override int ProtocolId
        {
            get
            {
                return Id;
            }
        }
        
        private uint m_houseId;
        
        public virtual uint HouseId
        {
            get
            {
                return m_houseId;
            }
            set
            {
                m_houseId = value;
            }
        }
        
        private uint m_modelId;
        
        public virtual uint ModelId
        {
            get
            {
                return m_modelId;
            }
            set
            {
                m_modelId = value;
            }
        }
        
        private string m_ownerName;
        
        public virtual string OwnerName
        {
            get
            {
                return m_ownerName;
            }
            set
            {
                m_ownerName = value;
            }
        }
        
        private short m_worldX;
        
        public virtual short WorldX
        {
            get
            {
                return m_worldX;
            }
            set
            {
                m_worldX = value;
            }
        }
        
        private short m_worldY;
        
        public virtual short WorldY
        {
            get
            {
                return m_worldY;
            }
            set
            {
                m_worldY = value;
            }
        }
        
        private int m_mapId;
        
        public virtual int MapId
        {
            get
            {
                return m_mapId;
            }
            set
            {
                m_mapId = value;
            }
        }
        
        private ushort m_subAreaId;
        
        public virtual ushort SubAreaId
        {
            get
            {
                return m_subAreaId;
            }
            set
            {
                m_subAreaId = value;
            }
        }
        
        private List<System.Int32> m_skillListIds;
        
        public virtual List<System.Int32> SkillListIds
        {
            get
            {
                return m_skillListIds;
            }
            set
            {
                m_skillListIds = value;
            }
        }
        
        private uint m_guildshareParams;
        
        public virtual uint GuildshareParams
        {
            get
            {
                return m_guildshareParams;
            }
            set
            {
                m_guildshareParams = value;
            }
        }
        
        public void Initiate(uint houseId, uint modelId, string ownerName, short worldX, short worldY, int mapId, ushort subAreaId, List<System.Int32> skillListIds, uint guildshareParams)
        {
            m_houseId = houseId;
            m_modelId = modelId;
            m_ownerName = ownerName;
            m_worldX = worldX;
            m_worldY = worldY;
            m_mapId = mapId;
            m_subAreaId = subAreaId;
            m_skillListIds = skillListIds;
            m_guildshareParams = guildshareParams;
        }
        
        public override void Serialize(ICustomDataWriter writer)
        {
            writer.WriteVarUhInt(m_houseId);
            writer.WriteVarUhInt(m_modelId);
            writer.WriteUTF(m_ownerName);
            writer.WriteShort(m_worldX);
            writer.WriteShort(m_worldY);
            writer.WriteInt(m_mapId);
            writer.WriteVarUhShort(m_subAreaId);
            writer.WriteShort(((short)(m_skillListIds.Count)));
            int skillListIdsIndex;
            for (skillListIdsIndex = 0; (skillListIdsIndex < m_skillListIds.Count); skillListIdsIndex = (skillListIdsIndex + 1))
            {
                writer.WriteInt(m_skillListIds[skillListIdsIndex]);
            }
            writer.WriteVarUhInt(m_guildshareParams);
        }
        
        public override void Deserialize(ICustomDataReader reader)
        {
            m_houseId = reader.ReadVarUhInt();
            m_modelId = reader.ReadVarUhInt();
            m_ownerName = reader.ReadUTF();
            m_worldX = reader.ReadShort();
            m_worldY = reader.ReadShort();
            m_mapId = reader.ReadInt();
            m_subAreaId = reader.ReadVarUhShort();
            int skillListIdsCount = reader.ReadUShort();
            int skillListIdsIndex;
            m_skillListIds = new System.Collections.Generic.List<int>();
            for (skillListIdsIndex = 0; (skillListIdsIndex < skillListIdsCount); skillListIdsIndex = (skillListIdsIndex + 1))
            {
                m_skillListIds.Add(reader.ReadInt());
            }
            m_guildshareParams = reader.ReadVarUhInt();
        }
    }
}
