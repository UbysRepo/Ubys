//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18063
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Common.Protocol.Network.Types.Game.Actions.Fight
{
    using System.Collections.Generic;
    using System;
    
    
    public class AbstractFightDispellableEffect : NetworkType
    {
        
        public const int Id = 206;
        
        public override int ProtocolId
        {
            get
            {
                return Id;
            }
        }
        
        private uint m_uid;
        
        public virtual uint Uid
        {
            get
            {
                return m_uid;
            }
            set
            {
                m_uid = value;
            }
        }
        
        private int m_targetId;
        
        public virtual int TargetId
        {
            get
            {
                return m_targetId;
            }
            set
            {
                m_targetId = value;
            }
        }
        
        private short m_turnDuration;
        
        public virtual short TurnDuration
        {
            get
            {
                return m_turnDuration;
            }
            set
            {
                m_turnDuration = value;
            }
        }
        
        private byte m_dispelable;
        
        public virtual byte Dispelable
        {
            get
            {
                return m_dispelable;
            }
            set
            {
                m_dispelable = value;
            }
        }
        
        private ushort m_spellId;
        
        public virtual ushort SpellId
        {
            get
            {
                return m_spellId;
            }
            set
            {
                m_spellId = value;
            }
        }
        
        private uint m_effectId;
        
        public virtual uint EffectId
        {
            get
            {
                return m_effectId;
            }
            set
            {
                m_effectId = value;
            }
        }
        
        private uint m_parentBoostUid;
        
        public virtual uint ParentBoostUid
        {
            get
            {
                return m_parentBoostUid;
            }
            set
            {
                m_parentBoostUid = value;
            }
        }
        
        public void Initiate(uint uid, int targetId, short turnDuration, byte dispelable, ushort spellId, uint effectId, uint parentBoostUid)
        {
            m_uid = uid;
            m_targetId = targetId;
            m_turnDuration = turnDuration;
            m_dispelable = dispelable;
            m_spellId = spellId;
            m_effectId = effectId;
            m_parentBoostUid = parentBoostUid;
        }
        
        public override void Serialize(ICustomDataWriter writer)
        {
            writer.WriteVarUhInt(m_uid);
            writer.WriteInt(m_targetId);
            writer.WriteShort(m_turnDuration);
            writer.WriteByte(m_dispelable);
            writer.WriteVarUhShort(m_spellId);
            writer.WriteVarUhInt(m_effectId);
            writer.WriteVarUhInt(m_parentBoostUid);
        }
        
        public override void Deserialize(ICustomDataReader reader)
        {
            m_uid = reader.ReadVarUhInt();
            m_targetId = reader.ReadInt();
            m_turnDuration = reader.ReadShort();
            m_dispelable = reader.ReadByte();
            m_spellId = reader.ReadVarUhShort();
            m_effectId = reader.ReadVarUhInt();
            m_parentBoostUid = reader.ReadVarUhInt();
        }
    }
}
