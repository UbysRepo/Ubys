//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18063
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Common.Protocol.Network.Types.Game.Actions.Fight
{
    using System.Collections.Generic;
    using System;
    
    
    public class GameActionMarkedCell : NetworkType
    {
        
        public const int Id = 85;
        
        public override int ProtocolId
        {
            get
            {
                return Id;
            }
        }
        
        private ushort m_cellId;
        
        public virtual ushort CellId
        {
            get
            {
                return m_cellId;
            }
            set
            {
                m_cellId = value;
            }
        }
        
        private byte m_zoneSize;
        
        public virtual byte ZoneSize
        {
            get
            {
                return m_zoneSize;
            }
            set
            {
                m_zoneSize = value;
            }
        }
        
        private int m_cellColor;
        
        public virtual int CellColor
        {
            get
            {
                return m_cellColor;
            }
            set
            {
                m_cellColor = value;
            }
        }
        
        private byte m_cellsType;
        
        public virtual byte CellsType
        {
            get
            {
                return m_cellsType;
            }
            set
            {
                m_cellsType = value;
            }
        }
        
        public void Initiate(ushort cellId, byte zoneSize, int cellColor, byte cellsType)
        {
            m_cellId = cellId;
            m_zoneSize = zoneSize;
            m_cellColor = cellColor;
            m_cellsType = cellsType;
        }
        
        public override void Serialize(ICustomDataWriter writer)
        {
            writer.WriteVarUhShort(m_cellId);
            writer.WriteByte(m_zoneSize);
            writer.WriteInt(m_cellColor);
            writer.WriteByte(m_cellsType);
        }
        
        public override void Deserialize(ICustomDataReader reader)
        {
            m_cellId = reader.ReadVarUhShort();
            m_zoneSize = reader.ReadByte();
            m_cellColor = reader.ReadInt();
            m_cellsType = reader.ReadByte();
        }
    }
}
