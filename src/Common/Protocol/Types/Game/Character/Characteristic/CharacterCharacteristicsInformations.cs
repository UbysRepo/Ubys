//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18063
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Common.Protocol.Network.Types.Game.Character.Characteristic
{
    using Common.Protocol.Network.Types.Game.Character.Alignment;
    using System.Collections.Generic;
    using System;
    
    
    public class CharacterCharacteristicsInformations : NetworkType
    {
        
        public const int Id = 8;
        
        public override int ProtocolId
        {
            get
            {
                return Id;
            }
        }
        
        private ulong m_experience;
        
        public virtual ulong Experience
        {
            get
            {
                return m_experience;
            }
            set
            {
                m_experience = value;
            }
        }
        
        private ulong m_experienceLevelFloor;
        
        public virtual ulong ExperienceLevelFloor
        {
            get
            {
                return m_experienceLevelFloor;
            }
            set
            {
                m_experienceLevelFloor = value;
            }
        }
        
        private ulong m_experienceNextLevelFloor;
        
        public virtual ulong ExperienceNextLevelFloor
        {
            get
            {
                return m_experienceNextLevelFloor;
            }
            set
            {
                m_experienceNextLevelFloor = value;
            }
        }
        
        private int m_kamas;
        
        public virtual int Kamas
        {
            get
            {
                return m_kamas;
            }
            set
            {
                m_kamas = value;
            }
        }
        
        private ushort m_statsPoints;
        
        public virtual ushort StatsPoints
        {
            get
            {
                return m_statsPoints;
            }
            set
            {
                m_statsPoints = value;
            }
        }
        
        private ushort m_additionnalPoints;
        
        public virtual ushort AdditionnalPoints
        {
            get
            {
                return m_additionnalPoints;
            }
            set
            {
                m_additionnalPoints = value;
            }
        }
        
        private ushort m_spellsPoints;
        
        public virtual ushort SpellsPoints
        {
            get
            {
                return m_spellsPoints;
            }
            set
            {
                m_spellsPoints = value;
            }
        }
        
        private ActorExtendedAlignmentInformations m_alignmentInfos;
        
        public virtual ActorExtendedAlignmentInformations AlignmentInfos
        {
            get
            {
                return m_alignmentInfos;
            }
            set
            {
                m_alignmentInfos = value;
            }
        }
        
        private uint m_lifePoints;
        
        public virtual uint LifePoints
        {
            get
            {
                return m_lifePoints;
            }
            set
            {
                m_lifePoints = value;
            }
        }
        
        private uint m_maxLifePoints;
        
        public virtual uint MaxLifePoints
        {
            get
            {
                return m_maxLifePoints;
            }
            set
            {
                m_maxLifePoints = value;
            }
        }
        
        private ushort m_energyPoints;
        
        public virtual ushort EnergyPoints
        {
            get
            {
                return m_energyPoints;
            }
            set
            {
                m_energyPoints = value;
            }
        }
        
        private ushort m_maxEnergyPoints;
        
        public virtual ushort MaxEnergyPoints
        {
            get
            {
                return m_maxEnergyPoints;
            }
            set
            {
                m_maxEnergyPoints = value;
            }
        }
        
        private short m_actionPointsCurrent;
        
        public virtual short ActionPointsCurrent
        {
            get
            {
                return m_actionPointsCurrent;
            }
            set
            {
                m_actionPointsCurrent = value;
            }
        }
        
        private short m_movementPointsCurrent;
        
        public virtual short MovementPointsCurrent
        {
            get
            {
                return m_movementPointsCurrent;
            }
            set
            {
                m_movementPointsCurrent = value;
            }
        }
        
        private CharacterBaseCharacteristic m_initiative;
        
        public virtual CharacterBaseCharacteristic Initiative
        {
            get
            {
                return m_initiative;
            }
            set
            {
                m_initiative = value;
            }
        }
        
        private CharacterBaseCharacteristic m_prospecting;
        
        public virtual CharacterBaseCharacteristic Prospecting
        {
            get
            {
                return m_prospecting;
            }
            set
            {
                m_prospecting = value;
            }
        }
        
        private CharacterBaseCharacteristic m_actionPoints;
        
        public virtual CharacterBaseCharacteristic ActionPoints
        {
            get
            {
                return m_actionPoints;
            }
            set
            {
                m_actionPoints = value;
            }
        }
        
        private CharacterBaseCharacteristic m_movementPoints;
        
        public virtual CharacterBaseCharacteristic MovementPoints
        {
            get
            {
                return m_movementPoints;
            }
            set
            {
                m_movementPoints = value;
            }
        }
        
        private CharacterBaseCharacteristic m_strength;
        
        public virtual CharacterBaseCharacteristic Strength
        {
            get
            {
                return m_strength;
            }
            set
            {
                m_strength = value;
            }
        }
        
        private CharacterBaseCharacteristic m_vitality;
        
        public virtual CharacterBaseCharacteristic Vitality
        {
            get
            {
                return m_vitality;
            }
            set
            {
                m_vitality = value;
            }
        }
        
        private CharacterBaseCharacteristic m_wisdom;
        
        public virtual CharacterBaseCharacteristic Wisdom
        {
            get
            {
                return m_wisdom;
            }
            set
            {
                m_wisdom = value;
            }
        }
        
        private CharacterBaseCharacteristic m_chance;
        
        public virtual CharacterBaseCharacteristic Chance
        {
            get
            {
                return m_chance;
            }
            set
            {
                m_chance = value;
            }
        }
        
        private CharacterBaseCharacteristic m_agility;
        
        public virtual CharacterBaseCharacteristic Agility
        {
            get
            {
                return m_agility;
            }
            set
            {
                m_agility = value;
            }
        }
        
        private CharacterBaseCharacteristic m_intelligence;
        
        public virtual CharacterBaseCharacteristic Intelligence
        {
            get
            {
                return m_intelligence;
            }
            set
            {
                m_intelligence = value;
            }
        }
        
        private CharacterBaseCharacteristic m_range;
        
        public virtual CharacterBaseCharacteristic Range
        {
            get
            {
                return m_range;
            }
            set
            {
                m_range = value;
            }
        }
        
        private CharacterBaseCharacteristic m_summonableCreaturesBoost;
        
        public virtual CharacterBaseCharacteristic SummonableCreaturesBoost
        {
            get
            {
                return m_summonableCreaturesBoost;
            }
            set
            {
                m_summonableCreaturesBoost = value;
            }
        }
        
        private CharacterBaseCharacteristic m_reflect;
        
        public virtual CharacterBaseCharacteristic Reflect
        {
            get
            {
                return m_reflect;
            }
            set
            {
                m_reflect = value;
            }
        }
        
        private CharacterBaseCharacteristic m_criticalHit;
        
        public virtual CharacterBaseCharacteristic CriticalHit
        {
            get
            {
                return m_criticalHit;
            }
            set
            {
                m_criticalHit = value;
            }
        }
        
        private ushort m_criticalHitWeapon;
        
        public virtual ushort CriticalHitWeapon
        {
            get
            {
                return m_criticalHitWeapon;
            }
            set
            {
                m_criticalHitWeapon = value;
            }
        }
        
        private CharacterBaseCharacteristic m_criticalMiss;
        
        public virtual CharacterBaseCharacteristic CriticalMiss
        {
            get
            {
                return m_criticalMiss;
            }
            set
            {
                m_criticalMiss = value;
            }
        }
        
        private CharacterBaseCharacteristic m_healBonus;
        
        public virtual CharacterBaseCharacteristic HealBonus
        {
            get
            {
                return m_healBonus;
            }
            set
            {
                m_healBonus = value;
            }
        }
        
        private CharacterBaseCharacteristic m_allDamagesBonus;
        
        public virtual CharacterBaseCharacteristic AllDamagesBonus
        {
            get
            {
                return m_allDamagesBonus;
            }
            set
            {
                m_allDamagesBonus = value;
            }
        }
        
        private CharacterBaseCharacteristic m_weaponDamagesBonusPercent;
        
        public virtual CharacterBaseCharacteristic WeaponDamagesBonusPercent
        {
            get
            {
                return m_weaponDamagesBonusPercent;
            }
            set
            {
                m_weaponDamagesBonusPercent = value;
            }
        }
        
        private CharacterBaseCharacteristic m_damagesBonusPercent;
        
        public virtual CharacterBaseCharacteristic DamagesBonusPercent
        {
            get
            {
                return m_damagesBonusPercent;
            }
            set
            {
                m_damagesBonusPercent = value;
            }
        }
        
        private CharacterBaseCharacteristic m_trapBonus;
        
        public virtual CharacterBaseCharacteristic TrapBonus
        {
            get
            {
                return m_trapBonus;
            }
            set
            {
                m_trapBonus = value;
            }
        }
        
        private CharacterBaseCharacteristic m_trapBonusPercent;
        
        public virtual CharacterBaseCharacteristic TrapBonusPercent
        {
            get
            {
                return m_trapBonusPercent;
            }
            set
            {
                m_trapBonusPercent = value;
            }
        }
        
        private CharacterBaseCharacteristic m_glyphBonusPercent;
        
        public virtual CharacterBaseCharacteristic GlyphBonusPercent
        {
            get
            {
                return m_glyphBonusPercent;
            }
            set
            {
                m_glyphBonusPercent = value;
            }
        }
        
        private CharacterBaseCharacteristic m_permanentDamagePercent;
        
        public virtual CharacterBaseCharacteristic PermanentDamagePercent
        {
            get
            {
                return m_permanentDamagePercent;
            }
            set
            {
                m_permanentDamagePercent = value;
            }
        }
        
        private CharacterBaseCharacteristic m_tackleBlock;
        
        public virtual CharacterBaseCharacteristic TackleBlock
        {
            get
            {
                return m_tackleBlock;
            }
            set
            {
                m_tackleBlock = value;
            }
        }
        
        private CharacterBaseCharacteristic m_tackleEvade;
        
        public virtual CharacterBaseCharacteristic TackleEvade
        {
            get
            {
                return m_tackleEvade;
            }
            set
            {
                m_tackleEvade = value;
            }
        }
        
        private CharacterBaseCharacteristic m_PAAttack;
        
        public virtual CharacterBaseCharacteristic PAAttack
        {
            get
            {
                return m_PAAttack;
            }
            set
            {
                m_PAAttack = value;
            }
        }
        
        private CharacterBaseCharacteristic m_PMAttack;
        
        public virtual CharacterBaseCharacteristic PMAttack
        {
            get
            {
                return m_PMAttack;
            }
            set
            {
                m_PMAttack = value;
            }
        }
        
        private CharacterBaseCharacteristic m_pushDamageBonus;
        
        public virtual CharacterBaseCharacteristic PushDamageBonus
        {
            get
            {
                return m_pushDamageBonus;
            }
            set
            {
                m_pushDamageBonus = value;
            }
        }
        
        private CharacterBaseCharacteristic m_criticalDamageBonus;
        
        public virtual CharacterBaseCharacteristic CriticalDamageBonus
        {
            get
            {
                return m_criticalDamageBonus;
            }
            set
            {
                m_criticalDamageBonus = value;
            }
        }
        
        private CharacterBaseCharacteristic m_neutralDamageBonus;
        
        public virtual CharacterBaseCharacteristic NeutralDamageBonus
        {
            get
            {
                return m_neutralDamageBonus;
            }
            set
            {
                m_neutralDamageBonus = value;
            }
        }
        
        private CharacterBaseCharacteristic m_earthDamageBonus;
        
        public virtual CharacterBaseCharacteristic EarthDamageBonus
        {
            get
            {
                return m_earthDamageBonus;
            }
            set
            {
                m_earthDamageBonus = value;
            }
        }
        
        private CharacterBaseCharacteristic m_waterDamageBonus;
        
        public virtual CharacterBaseCharacteristic WaterDamageBonus
        {
            get
            {
                return m_waterDamageBonus;
            }
            set
            {
                m_waterDamageBonus = value;
            }
        }
        
        private CharacterBaseCharacteristic m_airDamageBonus;
        
        public virtual CharacterBaseCharacteristic AirDamageBonus
        {
            get
            {
                return m_airDamageBonus;
            }
            set
            {
                m_airDamageBonus = value;
            }
        }
        
        private CharacterBaseCharacteristic m_fireDamageBonus;
        
        public virtual CharacterBaseCharacteristic FireDamageBonus
        {
            get
            {
                return m_fireDamageBonus;
            }
            set
            {
                m_fireDamageBonus = value;
            }
        }
        
        private CharacterBaseCharacteristic m_dodgePALostProbability;
        
        public virtual CharacterBaseCharacteristic DodgePALostProbability
        {
            get
            {
                return m_dodgePALostProbability;
            }
            set
            {
                m_dodgePALostProbability = value;
            }
        }
        
        private CharacterBaseCharacteristic m_dodgePMLostProbability;
        
        public virtual CharacterBaseCharacteristic DodgePMLostProbability
        {
            get
            {
                return m_dodgePMLostProbability;
            }
            set
            {
                m_dodgePMLostProbability = value;
            }
        }
        
        private CharacterBaseCharacteristic m_neutralElementResistPercent;
        
        public virtual CharacterBaseCharacteristic NeutralElementResistPercent
        {
            get
            {
                return m_neutralElementResistPercent;
            }
            set
            {
                m_neutralElementResistPercent = value;
            }
        }
        
        private CharacterBaseCharacteristic m_earthElementResistPercent;
        
        public virtual CharacterBaseCharacteristic EarthElementResistPercent
        {
            get
            {
                return m_earthElementResistPercent;
            }
            set
            {
                m_earthElementResistPercent = value;
            }
        }
        
        private CharacterBaseCharacteristic m_waterElementResistPercent;
        
        public virtual CharacterBaseCharacteristic WaterElementResistPercent
        {
            get
            {
                return m_waterElementResistPercent;
            }
            set
            {
                m_waterElementResistPercent = value;
            }
        }
        
        private CharacterBaseCharacteristic m_airElementResistPercent;
        
        public virtual CharacterBaseCharacteristic AirElementResistPercent
        {
            get
            {
                return m_airElementResistPercent;
            }
            set
            {
                m_airElementResistPercent = value;
            }
        }
        
        private CharacterBaseCharacteristic m_fireElementResistPercent;
        
        public virtual CharacterBaseCharacteristic FireElementResistPercent
        {
            get
            {
                return m_fireElementResistPercent;
            }
            set
            {
                m_fireElementResistPercent = value;
            }
        }
        
        private CharacterBaseCharacteristic m_neutralElementReduction;
        
        public virtual CharacterBaseCharacteristic NeutralElementReduction
        {
            get
            {
                return m_neutralElementReduction;
            }
            set
            {
                m_neutralElementReduction = value;
            }
        }
        
        private CharacterBaseCharacteristic m_earthElementReduction;
        
        public virtual CharacterBaseCharacteristic EarthElementReduction
        {
            get
            {
                return m_earthElementReduction;
            }
            set
            {
                m_earthElementReduction = value;
            }
        }
        
        private CharacterBaseCharacteristic m_waterElementReduction;
        
        public virtual CharacterBaseCharacteristic WaterElementReduction
        {
            get
            {
                return m_waterElementReduction;
            }
            set
            {
                m_waterElementReduction = value;
            }
        }
        
        private CharacterBaseCharacteristic m_airElementReduction;
        
        public virtual CharacterBaseCharacteristic AirElementReduction
        {
            get
            {
                return m_airElementReduction;
            }
            set
            {
                m_airElementReduction = value;
            }
        }
        
        private CharacterBaseCharacteristic m_fireElementReduction;
        
        public virtual CharacterBaseCharacteristic FireElementReduction
        {
            get
            {
                return m_fireElementReduction;
            }
            set
            {
                m_fireElementReduction = value;
            }
        }
        
        private CharacterBaseCharacteristic m_pushDamageReduction;
        
        public virtual CharacterBaseCharacteristic PushDamageReduction
        {
            get
            {
                return m_pushDamageReduction;
            }
            set
            {
                m_pushDamageReduction = value;
            }
        }
        
        private CharacterBaseCharacteristic m_criticalDamageReduction;
        
        public virtual CharacterBaseCharacteristic CriticalDamageReduction
        {
            get
            {
                return m_criticalDamageReduction;
            }
            set
            {
                m_criticalDamageReduction = value;
            }
        }
        
        private CharacterBaseCharacteristic m_pvpNeutralElementResistPercent;
        
        public virtual CharacterBaseCharacteristic PvpNeutralElementResistPercent
        {
            get
            {
                return m_pvpNeutralElementResistPercent;
            }
            set
            {
                m_pvpNeutralElementResistPercent = value;
            }
        }
        
        private CharacterBaseCharacteristic m_pvpEarthElementResistPercent;
        
        public virtual CharacterBaseCharacteristic PvpEarthElementResistPercent
        {
            get
            {
                return m_pvpEarthElementResistPercent;
            }
            set
            {
                m_pvpEarthElementResistPercent = value;
            }
        }
        
        private CharacterBaseCharacteristic m_pvpWaterElementResistPercent;
        
        public virtual CharacterBaseCharacteristic PvpWaterElementResistPercent
        {
            get
            {
                return m_pvpWaterElementResistPercent;
            }
            set
            {
                m_pvpWaterElementResistPercent = value;
            }
        }
        
        private CharacterBaseCharacteristic m_pvpAirElementResistPercent;
        
        public virtual CharacterBaseCharacteristic PvpAirElementResistPercent
        {
            get
            {
                return m_pvpAirElementResistPercent;
            }
            set
            {
                m_pvpAirElementResistPercent = value;
            }
        }
        
        private CharacterBaseCharacteristic m_pvpFireElementResistPercent;
        
        public virtual CharacterBaseCharacteristic PvpFireElementResistPercent
        {
            get
            {
                return m_pvpFireElementResistPercent;
            }
            set
            {
                m_pvpFireElementResistPercent = value;
            }
        }
        
        private CharacterBaseCharacteristic m_pvpNeutralElementReduction;
        
        public virtual CharacterBaseCharacteristic PvpNeutralElementReduction
        {
            get
            {
                return m_pvpNeutralElementReduction;
            }
            set
            {
                m_pvpNeutralElementReduction = value;
            }
        }
        
        private CharacterBaseCharacteristic m_pvpEarthElementReduction;
        
        public virtual CharacterBaseCharacteristic PvpEarthElementReduction
        {
            get
            {
                return m_pvpEarthElementReduction;
            }
            set
            {
                m_pvpEarthElementReduction = value;
            }
        }
        
        private CharacterBaseCharacteristic m_pvpWaterElementReduction;
        
        public virtual CharacterBaseCharacteristic PvpWaterElementReduction
        {
            get
            {
                return m_pvpWaterElementReduction;
            }
            set
            {
                m_pvpWaterElementReduction = value;
            }
        }
        
        private CharacterBaseCharacteristic m_pvpAirElementReduction;
        
        public virtual CharacterBaseCharacteristic PvpAirElementReduction
        {
            get
            {
                return m_pvpAirElementReduction;
            }
            set
            {
                m_pvpAirElementReduction = value;
            }
        }
        
        private CharacterBaseCharacteristic m_pvpFireElementReduction;
        
        public virtual CharacterBaseCharacteristic PvpFireElementReduction
        {
            get
            {
                return m_pvpFireElementReduction;
            }
            set
            {
                m_pvpFireElementReduction = value;
            }
        }
        
        private List<CharacterSpellModification> m_spellModifications;
        
        public virtual List<CharacterSpellModification> SpellModifications
        {
            get
            {
                return m_spellModifications;
            }
            set
            {
                m_spellModifications = value;
            }
        }
        
        private int m_probationTime;
        
        public virtual int ProbationTime
        {
            get
            {
                return m_probationTime;
            }
            set
            {
                m_probationTime = value;
            }
        }
        
        public void Initiate(
                    ulong experience, 
                    ulong experienceLevelFloor, 
                    ulong experienceNextLevelFloor, 
                    int kamas, 
                    ushort statsPoints, 
                    ushort additionnalPoints, 
                    ushort spellsPoints, 
                    ActorExtendedAlignmentInformations alignmentInfos, 
                    uint lifePoints, 
                    uint maxLifePoints, 
                    ushort energyPoints, 
                    ushort maxEnergyPoints, 
                    short actionPointsCurrent, 
                    short movementPointsCurrent, 
                    CharacterBaseCharacteristic initiative, 
                    CharacterBaseCharacteristic prospecting, 
                    CharacterBaseCharacteristic actionPoints, 
                    CharacterBaseCharacteristic movementPoints, 
                    CharacterBaseCharacteristic strength, 
                    CharacterBaseCharacteristic vitality, 
                    CharacterBaseCharacteristic wisdom, 
                    CharacterBaseCharacteristic chance, 
                    CharacterBaseCharacteristic agility, 
                    CharacterBaseCharacteristic intelligence, 
                    CharacterBaseCharacteristic range, 
                    CharacterBaseCharacteristic summonableCreaturesBoost, 
                    CharacterBaseCharacteristic reflect, 
                    CharacterBaseCharacteristic criticalHit, 
                    ushort criticalHitWeapon, 
                    CharacterBaseCharacteristic criticalMiss, 
                    CharacterBaseCharacteristic healBonus, 
                    CharacterBaseCharacteristic allDamagesBonus, 
                    CharacterBaseCharacteristic weaponDamagesBonusPercent, 
                    CharacterBaseCharacteristic damagesBonusPercent, 
                    CharacterBaseCharacteristic trapBonus, 
                    CharacterBaseCharacteristic trapBonusPercent, 
                    CharacterBaseCharacteristic glyphBonusPercent, 
                    CharacterBaseCharacteristic permanentDamagePercent, 
                    CharacterBaseCharacteristic tackleBlock, 
                    CharacterBaseCharacteristic tackleEvade, 
                    CharacterBaseCharacteristic pAAttack, 
                    CharacterBaseCharacteristic pMAttack, 
                    CharacterBaseCharacteristic pushDamageBonus, 
                    CharacterBaseCharacteristic criticalDamageBonus, 
                    CharacterBaseCharacteristic neutralDamageBonus, 
                    CharacterBaseCharacteristic earthDamageBonus, 
                    CharacterBaseCharacteristic waterDamageBonus, 
                    CharacterBaseCharacteristic airDamageBonus, 
                    CharacterBaseCharacteristic fireDamageBonus, 
                    CharacterBaseCharacteristic dodgePALostProbability, 
                    CharacterBaseCharacteristic dodgePMLostProbability, 
                    CharacterBaseCharacteristic neutralElementResistPercent, 
                    CharacterBaseCharacteristic earthElementResistPercent, 
                    CharacterBaseCharacteristic waterElementResistPercent, 
                    CharacterBaseCharacteristic airElementResistPercent, 
                    CharacterBaseCharacteristic fireElementResistPercent, 
                    CharacterBaseCharacteristic neutralElementReduction, 
                    CharacterBaseCharacteristic earthElementReduction, 
                    CharacterBaseCharacteristic waterElementReduction, 
                    CharacterBaseCharacteristic airElementReduction, 
                    CharacterBaseCharacteristic fireElementReduction, 
                    CharacterBaseCharacteristic pushDamageReduction, 
                    CharacterBaseCharacteristic criticalDamageReduction, 
                    CharacterBaseCharacteristic pvpNeutralElementResistPercent, 
                    CharacterBaseCharacteristic pvpEarthElementResistPercent, 
                    CharacterBaseCharacteristic pvpWaterElementResistPercent, 
                    CharacterBaseCharacteristic pvpAirElementResistPercent, 
                    CharacterBaseCharacteristic pvpFireElementResistPercent, 
                    CharacterBaseCharacteristic pvpNeutralElementReduction, 
                    CharacterBaseCharacteristic pvpEarthElementReduction, 
                    CharacterBaseCharacteristic pvpWaterElementReduction, 
                    CharacterBaseCharacteristic pvpAirElementReduction, 
                    CharacterBaseCharacteristic pvpFireElementReduction, 
                    List<CharacterSpellModification> spellModifications, 
                    int probationTime)
        {
            m_experience = experience;
            m_experienceLevelFloor = experienceLevelFloor;
            m_experienceNextLevelFloor = experienceNextLevelFloor;
            m_kamas = kamas;
            m_statsPoints = statsPoints;
            m_additionnalPoints = additionnalPoints;
            m_spellsPoints = spellsPoints;
            m_alignmentInfos = alignmentInfos;
            m_lifePoints = lifePoints;
            m_maxLifePoints = maxLifePoints;
            m_energyPoints = energyPoints;
            m_maxEnergyPoints = maxEnergyPoints;
            m_actionPointsCurrent = actionPointsCurrent;
            m_movementPointsCurrent = movementPointsCurrent;
            m_initiative = initiative;
            m_prospecting = prospecting;
            m_actionPoints = actionPoints;
            m_movementPoints = movementPoints;
            m_strength = strength;
            m_vitality = vitality;
            m_wisdom = wisdom;
            m_chance = chance;
            m_agility = agility;
            m_intelligence = intelligence;
            m_range = range;
            m_summonableCreaturesBoost = summonableCreaturesBoost;
            m_reflect = reflect;
            m_criticalHit = criticalHit;
            m_criticalHitWeapon = criticalHitWeapon;
            m_criticalMiss = criticalMiss;
            m_healBonus = healBonus;
            m_allDamagesBonus = allDamagesBonus;
            m_weaponDamagesBonusPercent = weaponDamagesBonusPercent;
            m_damagesBonusPercent = damagesBonusPercent;
            m_trapBonus = trapBonus;
            m_trapBonusPercent = trapBonusPercent;
            m_glyphBonusPercent = glyphBonusPercent;
            m_permanentDamagePercent = permanentDamagePercent;
            m_tackleBlock = tackleBlock;
            m_tackleEvade = tackleEvade;
            m_PAAttack = pAAttack;
            m_PMAttack = pMAttack;
            m_pushDamageBonus = pushDamageBonus;
            m_criticalDamageBonus = criticalDamageBonus;
            m_neutralDamageBonus = neutralDamageBonus;
            m_earthDamageBonus = earthDamageBonus;
            m_waterDamageBonus = waterDamageBonus;
            m_airDamageBonus = airDamageBonus;
            m_fireDamageBonus = fireDamageBonus;
            m_dodgePALostProbability = dodgePALostProbability;
            m_dodgePMLostProbability = dodgePMLostProbability;
            m_neutralElementResistPercent = neutralElementResistPercent;
            m_earthElementResistPercent = earthElementResistPercent;
            m_waterElementResistPercent = waterElementResistPercent;
            m_airElementResistPercent = airElementResistPercent;
            m_fireElementResistPercent = fireElementResistPercent;
            m_neutralElementReduction = neutralElementReduction;
            m_earthElementReduction = earthElementReduction;
            m_waterElementReduction = waterElementReduction;
            m_airElementReduction = airElementReduction;
            m_fireElementReduction = fireElementReduction;
            m_pushDamageReduction = pushDamageReduction;
            m_criticalDamageReduction = criticalDamageReduction;
            m_pvpNeutralElementResistPercent = pvpNeutralElementResistPercent;
            m_pvpEarthElementResistPercent = pvpEarthElementResistPercent;
            m_pvpWaterElementResistPercent = pvpWaterElementResistPercent;
            m_pvpAirElementResistPercent = pvpAirElementResistPercent;
            m_pvpFireElementResistPercent = pvpFireElementResistPercent;
            m_pvpNeutralElementReduction = pvpNeutralElementReduction;
            m_pvpEarthElementReduction = pvpEarthElementReduction;
            m_pvpWaterElementReduction = pvpWaterElementReduction;
            m_pvpAirElementReduction = pvpAirElementReduction;
            m_pvpFireElementReduction = pvpFireElementReduction;
            m_spellModifications = spellModifications;
            m_probationTime = probationTime;
        }
        
        public override void Serialize(ICustomDataWriter writer)
        {
            writer.WriteVarUhLong(m_experience);
            writer.WriteVarUhLong(m_experienceLevelFloor);
            writer.WriteVarUhLong(m_experienceNextLevelFloor);
            writer.WriteInt(m_kamas);
            writer.WriteVarUhShort(m_statsPoints);
            writer.WriteVarUhShort(m_additionnalPoints);
            writer.WriteVarUhShort(m_spellsPoints);
            m_alignmentInfos.Serialize(writer);
            writer.WriteVarUhInt(m_lifePoints);
            writer.WriteVarUhInt(m_maxLifePoints);
            writer.WriteVarUhShort(m_energyPoints);
            writer.WriteVarUhShort(m_maxEnergyPoints);
            writer.WriteVarShort(m_actionPointsCurrent);
            writer.WriteVarShort(m_movementPointsCurrent);
            m_initiative.Serialize(writer);
            m_prospecting.Serialize(writer);
            m_actionPoints.Serialize(writer);
            m_movementPoints.Serialize(writer);
            m_strength.Serialize(writer);
            m_vitality.Serialize(writer);
            m_wisdom.Serialize(writer);
            m_chance.Serialize(writer);
            m_agility.Serialize(writer);
            m_intelligence.Serialize(writer);
            m_range.Serialize(writer);
            m_summonableCreaturesBoost.Serialize(writer);
            m_reflect.Serialize(writer);
            m_criticalHit.Serialize(writer);
            writer.WriteVarUhShort(m_criticalHitWeapon);
            m_criticalMiss.Serialize(writer);
            m_healBonus.Serialize(writer);
            m_allDamagesBonus.Serialize(writer);
            m_weaponDamagesBonusPercent.Serialize(writer);
            m_damagesBonusPercent.Serialize(writer);
            m_trapBonus.Serialize(writer);
            m_trapBonusPercent.Serialize(writer);
            m_glyphBonusPercent.Serialize(writer);
            m_permanentDamagePercent.Serialize(writer);
            m_tackleBlock.Serialize(writer);
            m_tackleEvade.Serialize(writer);
            m_PAAttack.Serialize(writer);
            m_PMAttack.Serialize(writer);
            m_pushDamageBonus.Serialize(writer);
            m_criticalDamageBonus.Serialize(writer);
            m_neutralDamageBonus.Serialize(writer);
            m_earthDamageBonus.Serialize(writer);
            m_waterDamageBonus.Serialize(writer);
            m_airDamageBonus.Serialize(writer);
            m_fireDamageBonus.Serialize(writer);
            m_dodgePALostProbability.Serialize(writer);
            m_dodgePMLostProbability.Serialize(writer);
            m_neutralElementResistPercent.Serialize(writer);
            m_earthElementResistPercent.Serialize(writer);
            m_waterElementResistPercent.Serialize(writer);
            m_airElementResistPercent.Serialize(writer);
            m_fireElementResistPercent.Serialize(writer);
            m_neutralElementReduction.Serialize(writer);
            m_earthElementReduction.Serialize(writer);
            m_waterElementReduction.Serialize(writer);
            m_airElementReduction.Serialize(writer);
            m_fireElementReduction.Serialize(writer);
            m_pushDamageReduction.Serialize(writer);
            m_criticalDamageReduction.Serialize(writer);
            m_pvpNeutralElementResistPercent.Serialize(writer);
            m_pvpEarthElementResistPercent.Serialize(writer);
            m_pvpWaterElementResistPercent.Serialize(writer);
            m_pvpAirElementResistPercent.Serialize(writer);
            m_pvpFireElementResistPercent.Serialize(writer);
            m_pvpNeutralElementReduction.Serialize(writer);
            m_pvpEarthElementReduction.Serialize(writer);
            m_pvpWaterElementReduction.Serialize(writer);
            m_pvpAirElementReduction.Serialize(writer);
            m_pvpFireElementReduction.Serialize(writer);
            writer.WriteShort(((short)(m_spellModifications.Count)));
            int spellModificationsIndex;
            for (spellModificationsIndex = 0; (spellModificationsIndex < m_spellModifications.Count); spellModificationsIndex = (spellModificationsIndex + 1))
            {
                CharacterSpellModification objectToSend = m_spellModifications[spellModificationsIndex];
                objectToSend.Serialize(writer);
            }
            writer.WriteInt(m_probationTime);
        }
        
        public override void Deserialize(ICustomDataReader reader)
        {
            m_experience = reader.ReadVarUhLong();
            m_experienceLevelFloor = reader.ReadVarUhLong();
            m_experienceNextLevelFloor = reader.ReadVarUhLong();
            m_kamas = reader.ReadInt();
            m_statsPoints = reader.ReadVarUhShort();
            m_additionnalPoints = reader.ReadVarUhShort();
            m_spellsPoints = reader.ReadVarUhShort();
            m_alignmentInfos = new ActorExtendedAlignmentInformations();
            m_alignmentInfos.Deserialize(reader);
            m_lifePoints = reader.ReadVarUhInt();
            m_maxLifePoints = reader.ReadVarUhInt();
            m_energyPoints = reader.ReadVarUhShort();
            m_maxEnergyPoints = reader.ReadVarUhShort();
            m_actionPointsCurrent = reader.ReadVarShort();
            m_movementPointsCurrent = reader.ReadVarShort();
            m_initiative = new CharacterBaseCharacteristic();
            m_initiative.Deserialize(reader);
            m_prospecting = new CharacterBaseCharacteristic();
            m_prospecting.Deserialize(reader);
            m_actionPoints = new CharacterBaseCharacteristic();
            m_actionPoints.Deserialize(reader);
            m_movementPoints = new CharacterBaseCharacteristic();
            m_movementPoints.Deserialize(reader);
            m_strength = new CharacterBaseCharacteristic();
            m_strength.Deserialize(reader);
            m_vitality = new CharacterBaseCharacteristic();
            m_vitality.Deserialize(reader);
            m_wisdom = new CharacterBaseCharacteristic();
            m_wisdom.Deserialize(reader);
            m_chance = new CharacterBaseCharacteristic();
            m_chance.Deserialize(reader);
            m_agility = new CharacterBaseCharacteristic();
            m_agility.Deserialize(reader);
            m_intelligence = new CharacterBaseCharacteristic();
            m_intelligence.Deserialize(reader);
            m_range = new CharacterBaseCharacteristic();
            m_range.Deserialize(reader);
            m_summonableCreaturesBoost = new CharacterBaseCharacteristic();
            m_summonableCreaturesBoost.Deserialize(reader);
            m_reflect = new CharacterBaseCharacteristic();
            m_reflect.Deserialize(reader);
            m_criticalHit = new CharacterBaseCharacteristic();
            m_criticalHit.Deserialize(reader);
            m_criticalHitWeapon = reader.ReadVarUhShort();
            m_criticalMiss = new CharacterBaseCharacteristic();
            m_criticalMiss.Deserialize(reader);
            m_healBonus = new CharacterBaseCharacteristic();
            m_healBonus.Deserialize(reader);
            m_allDamagesBonus = new CharacterBaseCharacteristic();
            m_allDamagesBonus.Deserialize(reader);
            m_weaponDamagesBonusPercent = new CharacterBaseCharacteristic();
            m_weaponDamagesBonusPercent.Deserialize(reader);
            m_damagesBonusPercent = new CharacterBaseCharacteristic();
            m_damagesBonusPercent.Deserialize(reader);
            m_trapBonus = new CharacterBaseCharacteristic();
            m_trapBonus.Deserialize(reader);
            m_trapBonusPercent = new CharacterBaseCharacteristic();
            m_trapBonusPercent.Deserialize(reader);
            m_glyphBonusPercent = new CharacterBaseCharacteristic();
            m_glyphBonusPercent.Deserialize(reader);
            m_permanentDamagePercent = new CharacterBaseCharacteristic();
            m_permanentDamagePercent.Deserialize(reader);
            m_tackleBlock = new CharacterBaseCharacteristic();
            m_tackleBlock.Deserialize(reader);
            m_tackleEvade = new CharacterBaseCharacteristic();
            m_tackleEvade.Deserialize(reader);
            m_PAAttack = new CharacterBaseCharacteristic();
            m_PAAttack.Deserialize(reader);
            m_PMAttack = new CharacterBaseCharacteristic();
            m_PMAttack.Deserialize(reader);
            m_pushDamageBonus = new CharacterBaseCharacteristic();
            m_pushDamageBonus.Deserialize(reader);
            m_criticalDamageBonus = new CharacterBaseCharacteristic();
            m_criticalDamageBonus.Deserialize(reader);
            m_neutralDamageBonus = new CharacterBaseCharacteristic();
            m_neutralDamageBonus.Deserialize(reader);
            m_earthDamageBonus = new CharacterBaseCharacteristic();
            m_earthDamageBonus.Deserialize(reader);
            m_waterDamageBonus = new CharacterBaseCharacteristic();
            m_waterDamageBonus.Deserialize(reader);
            m_airDamageBonus = new CharacterBaseCharacteristic();
            m_airDamageBonus.Deserialize(reader);
            m_fireDamageBonus = new CharacterBaseCharacteristic();
            m_fireDamageBonus.Deserialize(reader);
            m_dodgePALostProbability = new CharacterBaseCharacteristic();
            m_dodgePALostProbability.Deserialize(reader);
            m_dodgePMLostProbability = new CharacterBaseCharacteristic();
            m_dodgePMLostProbability.Deserialize(reader);
            m_neutralElementResistPercent = new CharacterBaseCharacteristic();
            m_neutralElementResistPercent.Deserialize(reader);
            m_earthElementResistPercent = new CharacterBaseCharacteristic();
            m_earthElementResistPercent.Deserialize(reader);
            m_waterElementResistPercent = new CharacterBaseCharacteristic();
            m_waterElementResistPercent.Deserialize(reader);
            m_airElementResistPercent = new CharacterBaseCharacteristic();
            m_airElementResistPercent.Deserialize(reader);
            m_fireElementResistPercent = new CharacterBaseCharacteristic();
            m_fireElementResistPercent.Deserialize(reader);
            m_neutralElementReduction = new CharacterBaseCharacteristic();
            m_neutralElementReduction.Deserialize(reader);
            m_earthElementReduction = new CharacterBaseCharacteristic();
            m_earthElementReduction.Deserialize(reader);
            m_waterElementReduction = new CharacterBaseCharacteristic();
            m_waterElementReduction.Deserialize(reader);
            m_airElementReduction = new CharacterBaseCharacteristic();
            m_airElementReduction.Deserialize(reader);
            m_fireElementReduction = new CharacterBaseCharacteristic();
            m_fireElementReduction.Deserialize(reader);
            m_pushDamageReduction = new CharacterBaseCharacteristic();
            m_pushDamageReduction.Deserialize(reader);
            m_criticalDamageReduction = new CharacterBaseCharacteristic();
            m_criticalDamageReduction.Deserialize(reader);
            m_pvpNeutralElementResistPercent = new CharacterBaseCharacteristic();
            m_pvpNeutralElementResistPercent.Deserialize(reader);
            m_pvpEarthElementResistPercent = new CharacterBaseCharacteristic();
            m_pvpEarthElementResistPercent.Deserialize(reader);
            m_pvpWaterElementResistPercent = new CharacterBaseCharacteristic();
            m_pvpWaterElementResistPercent.Deserialize(reader);
            m_pvpAirElementResistPercent = new CharacterBaseCharacteristic();
            m_pvpAirElementResistPercent.Deserialize(reader);
            m_pvpFireElementResistPercent = new CharacterBaseCharacteristic();
            m_pvpFireElementResistPercent.Deserialize(reader);
            m_pvpNeutralElementReduction = new CharacterBaseCharacteristic();
            m_pvpNeutralElementReduction.Deserialize(reader);
            m_pvpEarthElementReduction = new CharacterBaseCharacteristic();
            m_pvpEarthElementReduction.Deserialize(reader);
            m_pvpWaterElementReduction = new CharacterBaseCharacteristic();
            m_pvpWaterElementReduction.Deserialize(reader);
            m_pvpAirElementReduction = new CharacterBaseCharacteristic();
            m_pvpAirElementReduction.Deserialize(reader);
            m_pvpFireElementReduction = new CharacterBaseCharacteristic();
            m_pvpFireElementReduction.Deserialize(reader);
            int spellModificationsCount = reader.ReadUShort();
            int spellModificationsIndex;
            m_spellModifications = new System.Collections.Generic.List<CharacterSpellModification>();
            for (spellModificationsIndex = 0; (spellModificationsIndex < spellModificationsCount); spellModificationsIndex = (spellModificationsIndex + 1))
            {
                CharacterSpellModification objectToAdd = new CharacterSpellModification();
                objectToAdd.Deserialize(reader);
                m_spellModifications.Add(objectToAdd);
            }
            m_probationTime = reader.ReadInt();
        }
    }
}
