//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18063
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Common.Protocol.Network.Messages.Connection
{
    using System.Collections.Generic;
    using System;
    
    
    public class HelloConnectMessage : NetworkMessage
    {
        
        public const int Id = 3;
        
        public override int ProtocolId
        {
            get
            {
                return Id;
            }
        }
        
        private string m_salt;
        
        public virtual string Salt
        {
            get
            {
                return m_salt;
            }
            set
            {
                m_salt = value;
            }
        }
        
        private List<System.Byte> m_key;
        
        public virtual List<System.Byte> Key
        {
            get
            {
                return m_key;
            }
            set
            {
                m_key = value;
            }
        }
        
        public void Initiate(string salt, List<System.Byte> key)
        {
            m_salt = salt;
            m_key = key;
        }
        
        public override void Serialize(ICustomDataWriter writer)
        {
            writer.WriteUTF(m_salt);
            writer.WriteShort(((short)(m_key.Count)));
            int keyIndex;
            for (keyIndex = 0; (keyIndex < m_key.Count); keyIndex = (keyIndex + 1))
            {
                writer.WriteByte(m_key[keyIndex]);
            }
        }
        
        public override void Deserialize(ICustomDataReader reader)
        {
            m_salt = reader.ReadUTF();
            int keyCount = reader.ReadUShort();
            int keyIndex;
            m_key = new System.Collections.Generic.List<byte>();
            for (keyIndex = 0; (keyIndex < keyCount); keyIndex = (keyIndex + 1))
            {
                m_key.Add(reader.ReadByte());
            }
        }
    }
}
