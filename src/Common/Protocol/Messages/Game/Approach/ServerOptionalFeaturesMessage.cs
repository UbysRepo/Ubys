//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18063
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Common.Protocol.Network.Messages.Game.Approach
{
    using System.Collections.Generic;
    using System;
    
    
    public class ServerOptionalFeaturesMessage : NetworkMessage
    {
        
        public const int Id = 6305;
        
        public override int ProtocolId
        {
            get
            {
                return Id;
            }
        }
        
        private List<System.Byte> m_features;
        
        public virtual List<System.Byte> Features
        {
            get
            {
                return m_features;
            }
            set
            {
                m_features = value;
            }
        }
        
        public void Initiate(List<System.Byte> features)
        {
            m_features = features;
        }
        
        public override void Serialize(ICustomDataWriter writer)
        {
            writer.WriteShort(((short)(m_features.Count)));
            int featuresIndex;
            for (featuresIndex = 0; (featuresIndex < m_features.Count); featuresIndex = (featuresIndex + 1))
            {
                writer.WriteByte(m_features[featuresIndex]);
            }
        }
        
        public override void Deserialize(ICustomDataReader reader)
        {
            int featuresCount = reader.ReadUShort();
            int featuresIndex;
            m_features = new System.Collections.Generic.List<byte>();
            for (featuresIndex = 0; (featuresIndex < featuresCount); featuresIndex = (featuresIndex + 1))
            {
                m_features.Add(reader.ReadByte());
            }
        }
    }
}
