//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18063
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Common.Protocol.Network.Messages.Game.Approach
{
    using Common.Protocol.Network.Types.Game.Approach;
    using Common.Protocol.Network;
    using System.Collections.Generic;
    using System;
    
    
    public class ServerSessionConstantsMessage : NetworkMessage
    {
        
        public const int Id = 6434;
        
        public override int ProtocolId
        {
            get
            {
                return Id;
            }
        }
        
        private List<ServerSessionConstant> m_variables;
        
        public virtual List<ServerSessionConstant> Variables
        {
            get
            {
                return m_variables;
            }
            set
            {
                m_variables = value;
            }
        }
        
        public void Initiate(List<ServerSessionConstant> variables)
        {
            m_variables = variables;
        }
        
        public override void Serialize(ICustomDataWriter writer)
        {
            writer.WriteShort(((short)(m_variables.Count)));
            int variablesIndex;
            for (variablesIndex = 0; (variablesIndex < m_variables.Count); variablesIndex = (variablesIndex + 1))
            {
                ServerSessionConstant objectToSend = m_variables[variablesIndex];
                writer.WriteUShort(((ushort)(objectToSend.ProtocolId)));
                objectToSend.Serialize(writer);
            }
        }
        
        public override void Deserialize(ICustomDataReader reader)
        {
            int variablesCount = reader.ReadUShort();
            int variablesIndex;
            m_variables = new System.Collections.Generic.List<ServerSessionConstant>();
            for (variablesIndex = 0; (variablesIndex < variablesCount); variablesIndex = (variablesIndex + 1))
            {
                ServerSessionConstant objectToAdd = ProtocolManager.GetTypeInstance<ServerSessionConstant>(reader.ReadUShort());
                objectToAdd.Deserialize(reader);
                m_variables.Add(objectToAdd);
            }
        }
    }
}
