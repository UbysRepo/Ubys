//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18063
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Common.Protocol.Network.Messages.Game.Approach
{
    using System.Collections.Generic;
    using System;
    
    
    public class AccountCapabilitiesMessage : NetworkMessage
    {
        
        public const int Id = 6216;
        
        public override int ProtocolId
        {
            get
            {
                return Id;
            }
        }
        
        private bool m_tutorialAvailable;
        
        public virtual bool TutorialAvailable
        {
            get
            {
                return m_tutorialAvailable;
            }
            set
            {
                m_tutorialAvailable = value;
            }
        }
        
        private bool m_canCreateNewCharacter;
        
        public virtual bool CanCreateNewCharacter
        {
            get
            {
                return m_canCreateNewCharacter;
            }
            set
            {
                m_canCreateNewCharacter = value;
            }
        }
        
        private int m_accountId;
        
        public virtual int AccountId
        {
            get
            {
                return m_accountId;
            }
            set
            {
                m_accountId = value;
            }
        }
        
        private ushort m_breedsVisible;
        
        public virtual ushort BreedsVisible
        {
            get
            {
                return m_breedsVisible;
            }
            set
            {
                m_breedsVisible = value;
            }
        }
        
        private ushort m_breedsAvailable;
        
        public virtual ushort BreedsAvailable
        {
            get
            {
                return m_breedsAvailable;
            }
            set
            {
                m_breedsAvailable = value;
            }
        }
        
        private byte m_status;
        
        public virtual byte Status
        {
            get
            {
                return m_status;
            }
            set
            {
                m_status = value;
            }
        }
        
        public void Initiate(bool tutorialAvailable, bool canCreateNewCharacter, int accountId, ushort breedsVisible, ushort breedsAvailable, byte status)
        {
            m_tutorialAvailable = tutorialAvailable;
            m_canCreateNewCharacter = canCreateNewCharacter;
            m_accountId = accountId;
            m_breedsVisible = breedsVisible;
            m_breedsAvailable = breedsAvailable;
            m_status = status;
        }
        
        public override void Serialize(ICustomDataWriter writer)
        {
            byte flag = new byte();
            BooleanByteWrapper.SetFlag(0, flag, m_tutorialAvailable);
            BooleanByteWrapper.SetFlag(1, flag, m_canCreateNewCharacter);
            writer.WriteByte(flag);
            writer.WriteInt(m_accountId);
            writer.WriteUShort(m_breedsVisible);
            writer.WriteUShort(m_breedsAvailable);
            writer.WriteByte(m_status);
        }
        
        public override void Deserialize(ICustomDataReader reader)
        {
            byte flag = reader.ReadByte();
            m_tutorialAvailable = BooleanByteWrapper.GetFlag(flag, 0);
            m_canCreateNewCharacter = BooleanByteWrapper.GetFlag(flag, 1);
            m_accountId = reader.ReadInt();
            m_breedsVisible = reader.ReadUShort();
            m_breedsAvailable = reader.ReadUShort();
            m_status = reader.ReadByte();
        }
    }
}
