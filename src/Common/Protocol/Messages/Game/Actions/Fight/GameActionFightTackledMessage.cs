//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18063
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Common.Protocol.Network.Messages.Game.Actions.Fight
{
    using Common.Protocol.Network.Messages.Game.Actions;
    using System.Collections.Generic;
    using System;
    
    
    public class GameActionFightTackledMessage : AbstractGameActionMessage
    {
        
        public const int Id = 1004;
        
        public override int ProtocolId
        {
            get
            {
                return Id;
            }
        }
        
        private List<System.Int32> m_tacklersIds;
        
        public virtual List<System.Int32> TacklersIds
        {
            get
            {
                return m_tacklersIds;
            }
            set
            {
                m_tacklersIds = value;
            }
        }
        
        public void Initiate(List<System.Int32> tacklersIds)
        {
            m_tacklersIds = tacklersIds;
        }
        
        public override void Serialize(ICustomDataWriter writer)
        {
            base.Serialize(writer);
            writer.WriteShort(((short)(m_tacklersIds.Count)));
            int tacklersIdsIndex;
            for (tacklersIdsIndex = 0; (tacklersIdsIndex < m_tacklersIds.Count); tacklersIdsIndex = (tacklersIdsIndex + 1))
            {
                writer.WriteInt(m_tacklersIds[tacklersIdsIndex]);
            }
        }
        
        public override void Deserialize(ICustomDataReader reader)
        {
            base.Deserialize(reader);
            int tacklersIdsCount = reader.ReadUShort();
            int tacklersIdsIndex;
            m_tacklersIds = new System.Collections.Generic.List<int>();
            for (tacklersIdsIndex = 0; (tacklersIdsIndex < tacklersIdsCount); tacklersIdsIndex = (tacklersIdsIndex + 1))
            {
                m_tacklersIds.Add(reader.ReadInt());
            }
        }
    }
}
