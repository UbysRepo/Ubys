//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18063
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Common.Protocol.Network.Messages.Game.Inventory.Exchanges
{
    using Common.Protocol.Network.Types.Game.Mount;
    using System.Collections.Generic;
    using System;
    
    
    public class ExchangeMountsPaddockAddMessage : NetworkMessage
    {
        
        public const int Id = 6561;
        
        public override int ProtocolId
        {
            get
            {
                return Id;
            }
        }
        
        private List<MountClientData> m_mountDescription;
        
        public virtual List<MountClientData> MountDescription
        {
            get
            {
                return m_mountDescription;
            }
            set
            {
                m_mountDescription = value;
            }
        }
        
        public void Initiate(List<MountClientData> mountDescription)
        {
            m_mountDescription = mountDescription;
        }
        
        public override void Serialize(ICustomDataWriter writer)
        {
            writer.WriteShort(((short)(m_mountDescription.Count)));
            int mountDescriptionIndex;
            for (mountDescriptionIndex = 0; (mountDescriptionIndex < m_mountDescription.Count); mountDescriptionIndex = (mountDescriptionIndex + 1))
            {
                MountClientData objectToSend = m_mountDescription[mountDescriptionIndex];
                objectToSend.Serialize(writer);
            }
        }
        
        public override void Deserialize(ICustomDataReader reader)
        {
            int mountDescriptionCount = reader.ReadUShort();
            int mountDescriptionIndex;
            m_mountDescription = new System.Collections.Generic.List<MountClientData>();
            for (mountDescriptionIndex = 0; (mountDescriptionIndex < mountDescriptionCount); mountDescriptionIndex = (mountDescriptionIndex + 1))
            {
                MountClientData objectToAdd = new MountClientData();
                objectToAdd.Deserialize(reader);
                m_mountDescription.Add(objectToAdd);
            }
        }
    }
}
