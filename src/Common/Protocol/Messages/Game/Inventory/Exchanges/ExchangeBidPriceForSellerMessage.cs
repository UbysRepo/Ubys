//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18063
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Common.Protocol.Network.Messages.Game.Inventory.Exchanges
{
    using System.Collections.Generic;
    using System;
    
    
    public class ExchangeBidPriceForSellerMessage : ExchangeBidPriceMessage
    {
        
        public const int Id = 6464;
        
        public override int ProtocolId
        {
            get
            {
                return Id;
            }
        }
        
        private bool m_allIdentical;
        
        public virtual bool AllIdentical
        {
            get
            {
                return m_allIdentical;
            }
            set
            {
                m_allIdentical = value;
            }
        }
        
        private List<System.UInt32> m_minimalPrices;
        
        public virtual List<System.UInt32> MinimalPrices
        {
            get
            {
                return m_minimalPrices;
            }
            set
            {
                m_minimalPrices = value;
            }
        }
        
        public void Initiate(bool allIdentical, List<System.UInt32> minimalPrices)
        {
            m_allIdentical = allIdentical;
            m_minimalPrices = minimalPrices;
        }
        
        public override void Serialize(ICustomDataWriter writer)
        {
            base.Serialize(writer);
            writer.WriteBoolean(m_allIdentical);
            writer.WriteShort(((short)(m_minimalPrices.Count)));
            int minimalPricesIndex;
            for (minimalPricesIndex = 0; (minimalPricesIndex < m_minimalPrices.Count); minimalPricesIndex = (minimalPricesIndex + 1))
            {
                writer.WriteVarUhInt(m_minimalPrices[minimalPricesIndex]);
            }
        }
        
        public override void Deserialize(ICustomDataReader reader)
        {
            base.Deserialize(reader);
            m_allIdentical = reader.ReadBoolean();
            int minimalPricesCount = reader.ReadUShort();
            int minimalPricesIndex;
            m_minimalPrices = new System.Collections.Generic.List<uint>();
            for (minimalPricesIndex = 0; (minimalPricesIndex < minimalPricesCount); minimalPricesIndex = (minimalPricesIndex + 1))
            {
                m_minimalPrices.Add(reader.ReadVarUhInt());
            }
        }
    }
}
