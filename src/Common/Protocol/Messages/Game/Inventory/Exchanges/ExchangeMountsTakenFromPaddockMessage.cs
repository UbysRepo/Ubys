//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18063
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Common.Protocol.Network.Messages.Game.Inventory.Exchanges
{
    using System.Collections.Generic;
    using System;
    
    
    public class ExchangeMountsTakenFromPaddockMessage : NetworkMessage
    {
        
        public const int Id = 6554;
        
        public override int ProtocolId
        {
            get
            {
                return Id;
            }
        }
        
        private string m_name;
        
        public virtual string Name
        {
            get
            {
                return m_name;
            }
            set
            {
                m_name = value;
            }
        }
        
        private short m_worldX;
        
        public virtual short WorldX
        {
            get
            {
                return m_worldX;
            }
            set
            {
                m_worldX = value;
            }
        }
        
        private short m_worldY;
        
        public virtual short WorldY
        {
            get
            {
                return m_worldY;
            }
            set
            {
                m_worldY = value;
            }
        }
        
        private string m_ownername;
        
        public virtual string Ownername
        {
            get
            {
                return m_ownername;
            }
            set
            {
                m_ownername = value;
            }
        }
        
        public void Initiate(string name, short worldX, short worldY, string ownername)
        {
            m_name = name;
            m_worldX = worldX;
            m_worldY = worldY;
            m_ownername = ownername;
        }
        
        public override void Serialize(ICustomDataWriter writer)
        {
            writer.WriteUTF(m_name);
            writer.WriteShort(m_worldX);
            writer.WriteShort(m_worldY);
            writer.WriteUTF(m_ownername);
        }
        
        public override void Deserialize(ICustomDataReader reader)
        {
            m_name = reader.ReadUTF();
            m_worldX = reader.ReadShort();
            m_worldY = reader.ReadShort();
            m_ownername = reader.ReadUTF();
        }
    }
}
