//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18063
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Common.Protocol.Network.Messages.Game.Inventory.Exchanges
{
    using Common.Protocol.Network.Types.Game.Context.Roleplay.Job;
    using System.Collections.Generic;
    using System;
    
    
    public class DecraftResultMessage : NetworkMessage
    {
        
        public const int Id = 6569;
        
        public override int ProtocolId
        {
            get
            {
                return Id;
            }
        }
        
        private List<DecraftedItemStackInfo> m_results;
        
        public virtual List<DecraftedItemStackInfo> Results
        {
            get
            {
                return m_results;
            }
            set
            {
                m_results = value;
            }
        }
        
        public void Initiate(List<DecraftedItemStackInfo> results)
        {
            m_results = results;
        }
        
        public override void Serialize(ICustomDataWriter writer)
        {
            writer.WriteShort(((short)(m_results.Count)));
            int resultsIndex;
            for (resultsIndex = 0; (resultsIndex < m_results.Count); resultsIndex = (resultsIndex + 1))
            {
                DecraftedItemStackInfo objectToSend = m_results[resultsIndex];
                objectToSend.Serialize(writer);
            }
        }
        
        public override void Deserialize(ICustomDataReader reader)
        {
            int resultsCount = reader.ReadUShort();
            int resultsIndex;
            m_results = new System.Collections.Generic.List<DecraftedItemStackInfo>();
            for (resultsIndex = 0; (resultsIndex < resultsCount); resultsIndex = (resultsIndex + 1))
            {
                DecraftedItemStackInfo objectToAdd = new DecraftedItemStackInfo();
                objectToAdd.Deserialize(reader);
                m_results.Add(objectToAdd);
            }
        }
    }
}
