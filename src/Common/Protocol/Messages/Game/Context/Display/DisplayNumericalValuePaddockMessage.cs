//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18063
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Common.Protocol.Network.Messages.Game.Context.Display
{
    using System.Collections.Generic;
    using System;
    
    
    public class DisplayNumericalValuePaddockMessage : NetworkMessage
    {
        
        public const int Id = 6563;
        
        public override int ProtocolId
        {
            get
            {
                return Id;
            }
        }
        
        private int m_rideId;
        
        public virtual int RideId
        {
            get
            {
                return m_rideId;
            }
            set
            {
                m_rideId = value;
            }
        }
        
        private int m_value;
        
        public virtual int Value
        {
            get
            {
                return m_value;
            }
            set
            {
                m_value = value;
            }
        }
        
        private byte m_type;
        
        public virtual byte Type
        {
            get
            {
                return m_type;
            }
            set
            {
                m_type = value;
            }
        }
        
        public void Initiate(int rideId, int value, byte type)
        {
            m_rideId = rideId;
            m_value = value;
            m_type = type;
        }
        
        public override void Serialize(ICustomDataWriter writer)
        {
            writer.WriteInt(m_rideId);
            writer.WriteInt(m_value);
            writer.WriteByte(m_type);
        }
        
        public override void Deserialize(ICustomDataReader reader)
        {
            m_rideId = reader.ReadInt();
            m_value = reader.ReadInt();
            m_type = reader.ReadByte();
        }
    }
}
