//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18063
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Common.Protocol.Network.Messages.Game.Context.Roleplay.Fight.Arena
{
    using System.Collections.Generic;
    using System;
    
    
    public class GameRolePlayArenaFightPropositionMessage : NetworkMessage
    {
        
        public const int Id = 6276;
        
        public override int ProtocolId
        {
            get
            {
                return Id;
            }
        }
        
        private int m_fightId;
        
        public virtual int FightId
        {
            get
            {
                return m_fightId;
            }
            set
            {
                m_fightId = value;
            }
        }
        
        private List<System.Int32> m_alliesId;
        
        public virtual List<System.Int32> AlliesId
        {
            get
            {
                return m_alliesId;
            }
            set
            {
                m_alliesId = value;
            }
        }
        
        private ushort m_duration;
        
        public virtual ushort Duration
        {
            get
            {
                return m_duration;
            }
            set
            {
                m_duration = value;
            }
        }
        
        public void Initiate(int fightId, List<System.Int32> alliesId, ushort duration)
        {
            m_fightId = fightId;
            m_alliesId = alliesId;
            m_duration = duration;
        }
        
        public override void Serialize(ICustomDataWriter writer)
        {
            writer.WriteInt(m_fightId);
            writer.WriteShort(((short)(m_alliesId.Count)));
            int alliesIdIndex;
            for (alliesIdIndex = 0; (alliesIdIndex < m_alliesId.Count); alliesIdIndex = (alliesIdIndex + 1))
            {
                writer.WriteInt(m_alliesId[alliesIdIndex]);
            }
            writer.WriteVarUhShort(m_duration);
        }
        
        public override void Deserialize(ICustomDataReader reader)
        {
            m_fightId = reader.ReadInt();
            int alliesIdCount = reader.ReadUShort();
            int alliesIdIndex;
            m_alliesId = new System.Collections.Generic.List<int>();
            for (alliesIdIndex = 0; (alliesIdIndex < alliesIdCount); alliesIdIndex = (alliesIdIndex + 1))
            {
                m_alliesId.Add(reader.ReadInt());
            }
            m_duration = reader.ReadVarUhShort();
        }
    }
}
