//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18063
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Common.Protocol.Network.Messages.Game.Context.Roleplay.Job
{
    using Common.Protocol.Network.Types.Game.Context.Roleplay.Job;
    using System.Collections.Generic;
    using System;
    
    
    public class JobCrafterDirectorySettingsMessage : NetworkMessage
    {
        
        public const int Id = 5652;
        
        public override int ProtocolId
        {
            get
            {
                return Id;
            }
        }
        
        private List<JobCrafterDirectorySettings> m_craftersSettings;
        
        public virtual List<JobCrafterDirectorySettings> CraftersSettings
        {
            get
            {
                return m_craftersSettings;
            }
            set
            {
                m_craftersSettings = value;
            }
        }
        
        public void Initiate(List<JobCrafterDirectorySettings> craftersSettings)
        {
            m_craftersSettings = craftersSettings;
        }
        
        public override void Serialize(ICustomDataWriter writer)
        {
            writer.WriteShort(((short)(m_craftersSettings.Count)));
            int craftersSettingsIndex;
            for (craftersSettingsIndex = 0; (craftersSettingsIndex < m_craftersSettings.Count); craftersSettingsIndex = (craftersSettingsIndex + 1))
            {
                JobCrafterDirectorySettings objectToSend = m_craftersSettings[craftersSettingsIndex];
                objectToSend.Serialize(writer);
            }
        }
        
        public override void Deserialize(ICustomDataReader reader)
        {
            int craftersSettingsCount = reader.ReadUShort();
            int craftersSettingsIndex;
            m_craftersSettings = new System.Collections.Generic.List<JobCrafterDirectorySettings>();
            for (craftersSettingsIndex = 0; (craftersSettingsIndex < craftersSettingsCount); craftersSettingsIndex = (craftersSettingsIndex + 1))
            {
                JobCrafterDirectorySettings objectToAdd = new JobCrafterDirectorySettings();
                objectToAdd.Deserialize(reader);
                m_craftersSettings.Add(objectToAdd);
            }
        }
    }
}
