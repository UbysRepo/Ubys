//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18063
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Common.Protocol.Network.Messages.Game.Context.Roleplay.Job
{
    using Common.Protocol.Network.Types.Game.Context.Roleplay.Job;
    using System.Collections.Generic;
    using System;
    
    
    public class JobExperienceMultiUpdateMessage : NetworkMessage
    {
        
        public const int Id = 5809;
        
        public override int ProtocolId
        {
            get
            {
                return Id;
            }
        }
        
        private List<JobExperience> m_experiencesUpdate;
        
        public virtual List<JobExperience> ExperiencesUpdate
        {
            get
            {
                return m_experiencesUpdate;
            }
            set
            {
                m_experiencesUpdate = value;
            }
        }
        
        public void Initiate(List<JobExperience> experiencesUpdate)
        {
            m_experiencesUpdate = experiencesUpdate;
        }
        
        public override void Serialize(ICustomDataWriter writer)
        {
            writer.WriteShort(((short)(m_experiencesUpdate.Count)));
            int experiencesUpdateIndex;
            for (experiencesUpdateIndex = 0; (experiencesUpdateIndex < m_experiencesUpdate.Count); experiencesUpdateIndex = (experiencesUpdateIndex + 1))
            {
                JobExperience objectToSend = m_experiencesUpdate[experiencesUpdateIndex];
                objectToSend.Serialize(writer);
            }
        }
        
        public override void Deserialize(ICustomDataReader reader)
        {
            int experiencesUpdateCount = reader.ReadUShort();
            int experiencesUpdateIndex;
            m_experiencesUpdate = new System.Collections.Generic.List<JobExperience>();
            for (experiencesUpdateIndex = 0; (experiencesUpdateIndex < experiencesUpdateCount); experiencesUpdateIndex = (experiencesUpdateIndex + 1))
            {
                JobExperience objectToAdd = new JobExperience();
                objectToAdd.Deserialize(reader);
                m_experiencesUpdate.Add(objectToAdd);
            }
        }
    }
}
