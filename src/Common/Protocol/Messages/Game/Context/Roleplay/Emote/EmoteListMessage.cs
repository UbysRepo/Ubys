//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18063
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Common.Protocol.Network.Messages.Game.Context.Roleplay.Emote
{
    using System.Collections.Generic;
    using System;
    
    
    public class EmoteListMessage : NetworkMessage
    {
        
        public const int Id = 5689;
        
        public override int ProtocolId
        {
            get
            {
                return Id;
            }
        }
        
        private List<System.SByte> m_emoteIds;
        
        public virtual List<System.SByte> EmoteIds
        {
            get
            {
                return m_emoteIds;
            }
            set
            {
                m_emoteIds = value;
            }
        }
        
        public void Initiate(List<System.SByte> emoteIds)
        {
            m_emoteIds = emoteIds;
        }
        
        public override void Serialize(ICustomDataWriter writer)
        {
            writer.WriteShort(((short)(m_emoteIds.Count)));
            int emoteIdsIndex;
            for (emoteIdsIndex = 0; (emoteIdsIndex < m_emoteIds.Count); emoteIdsIndex = (emoteIdsIndex + 1))
            {
                writer.WriteSByte(m_emoteIds[emoteIdsIndex]);
            }
        }
        
        public override void Deserialize(ICustomDataReader reader)
        {
            int emoteIdsCount = reader.ReadUShort();
            int emoteIdsIndex;
            m_emoteIds = new System.Collections.Generic.List<sbyte>();
            for (emoteIdsIndex = 0; (emoteIdsIndex < emoteIdsCount); emoteIdsIndex = (emoteIdsIndex + 1))
            {
                m_emoteIds.Add(reader.ReadSByte());
            }
        }
    }
}
