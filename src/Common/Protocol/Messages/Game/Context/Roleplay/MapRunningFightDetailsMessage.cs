//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18063
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Common.Protocol.Network.Messages.Game.Context.Roleplay
{
    using Common.Protocol.Network.Types.Game.Context.Fight;
    using Common.Protocol.Network;
    using System.Collections.Generic;
    using System;
    
    
    public class MapRunningFightDetailsMessage : NetworkMessage
    {
        
        public const int Id = 5751;
        
        public override int ProtocolId
        {
            get
            {
                return Id;
            }
        }
        
        private int m_fightId;
        
        public virtual int FightId
        {
            get
            {
                return m_fightId;
            }
            set
            {
                m_fightId = value;
            }
        }
        
        private List<GameFightFighterLightInformations> m_attackers;
        
        public virtual List<GameFightFighterLightInformations> Attackers
        {
            get
            {
                return m_attackers;
            }
            set
            {
                m_attackers = value;
            }
        }
        
        private List<GameFightFighterLightInformations> m_defenders;
        
        public virtual List<GameFightFighterLightInformations> Defenders
        {
            get
            {
                return m_defenders;
            }
            set
            {
                m_defenders = value;
            }
        }
        
        public void Initiate(int fightId, List<GameFightFighterLightInformations> attackers, List<GameFightFighterLightInformations> defenders)
        {
            m_fightId = fightId;
            m_attackers = attackers;
            m_defenders = defenders;
        }
        
        public override void Serialize(ICustomDataWriter writer)
        {
            writer.WriteInt(m_fightId);
            writer.WriteShort(((short)(m_attackers.Count)));
            int attackersIndex;
            for (attackersIndex = 0; (attackersIndex < m_attackers.Count); attackersIndex = (attackersIndex + 1))
            {
                GameFightFighterLightInformations objectToSend = m_attackers[attackersIndex];
                writer.WriteUShort(((ushort)(objectToSend.ProtocolId)));
                objectToSend.Serialize(writer);
            }
            writer.WriteShort(((short)(m_defenders.Count)));
            int defendersIndex;
            for (defendersIndex = 0; (defendersIndex < m_defenders.Count); defendersIndex = (defendersIndex + 1))
            {
                GameFightFighterLightInformations objectToSend = m_defenders[defendersIndex];
                writer.WriteUShort(((ushort)(objectToSend.ProtocolId)));
                objectToSend.Serialize(writer);
            }
        }
        
        public override void Deserialize(ICustomDataReader reader)
        {
            m_fightId = reader.ReadInt();
            int attackersCount = reader.ReadUShort();
            int attackersIndex;
            m_attackers = new System.Collections.Generic.List<GameFightFighterLightInformations>();
            for (attackersIndex = 0; (attackersIndex < attackersCount); attackersIndex = (attackersIndex + 1))
            {
                GameFightFighterLightInformations objectToAdd = ProtocolManager.GetTypeInstance<GameFightFighterLightInformations>(reader.ReadUShort());
                objectToAdd.Deserialize(reader);
                m_attackers.Add(objectToAdd);
            }
            int defendersCount = reader.ReadUShort();
            int defendersIndex;
            m_defenders = new System.Collections.Generic.List<GameFightFighterLightInformations>();
            for (defendersIndex = 0; (defendersIndex < defendersCount); defendersIndex = (defendersIndex + 1))
            {
                GameFightFighterLightInformations objectToAdd = ProtocolManager.GetTypeInstance<GameFightFighterLightInformations>(reader.ReadUShort());
                objectToAdd.Deserialize(reader);
                m_defenders.Add(objectToAdd);
            }
        }
    }
}
