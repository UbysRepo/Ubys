//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18063
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Common.Protocol.Network.Messages.Game.Context.Roleplay.Npc
{
    using Common.Protocol.Network.Types.Game.Context.Roleplay;
    using System.Collections.Generic;
    using System;
    
    
    public class TaxCollectorDialogQuestionExtendedMessage : TaxCollectorDialogQuestionBasicMessage
    {
        
        public const int Id = 5615;
        
        public override int ProtocolId
        {
            get
            {
                return Id;
            }
        }
        
        private ushort m_maxPods;
        
        public virtual ushort MaxPods
        {
            get
            {
                return m_maxPods;
            }
            set
            {
                m_maxPods = value;
            }
        }
        
        private ushort m_prospecting;
        
        public virtual ushort Prospecting
        {
            get
            {
                return m_prospecting;
            }
            set
            {
                m_prospecting = value;
            }
        }
        
        private ushort m_wisdom;
        
        public virtual ushort Wisdom
        {
            get
            {
                return m_wisdom;
            }
            set
            {
                m_wisdom = value;
            }
        }
        
        private byte m_taxCollectorsCount;
        
        public virtual byte TaxCollectorsCount
        {
            get
            {
                return m_taxCollectorsCount;
            }
            set
            {
                m_taxCollectorsCount = value;
            }
        }
        
        private int m_taxCollectorAttack;
        
        public virtual int TaxCollectorAttack
        {
            get
            {
                return m_taxCollectorAttack;
            }
            set
            {
                m_taxCollectorAttack = value;
            }
        }
        
        private uint m_kamas;
        
        public virtual uint Kamas
        {
            get
            {
                return m_kamas;
            }
            set
            {
                m_kamas = value;
            }
        }
        
        private ulong m_experience;
        
        public virtual ulong Experience
        {
            get
            {
                return m_experience;
            }
            set
            {
                m_experience = value;
            }
        }
        
        private uint m_pods;
        
        public virtual uint Pods
        {
            get
            {
                return m_pods;
            }
            set
            {
                m_pods = value;
            }
        }
        
        private uint m_itemsValue;
        
        public virtual uint ItemsValue
        {
            get
            {
                return m_itemsValue;
            }
            set
            {
                m_itemsValue = value;
            }
        }
        
        public void Initiate(ushort maxPods, ushort prospecting, ushort wisdom, byte taxCollectorsCount, int taxCollectorAttack, uint kamas, ulong experience, uint pods, uint itemsValue)
        {
            m_maxPods = maxPods;
            m_prospecting = prospecting;
            m_wisdom = wisdom;
            m_taxCollectorsCount = taxCollectorsCount;
            m_taxCollectorAttack = taxCollectorAttack;
            m_kamas = kamas;
            m_experience = experience;
            m_pods = pods;
            m_itemsValue = itemsValue;
        }
        
        public override void Serialize(ICustomDataWriter writer)
        {
            base.Serialize(writer);
            writer.WriteVarUhShort(m_maxPods);
            writer.WriteVarUhShort(m_prospecting);
            writer.WriteVarUhShort(m_wisdom);
            writer.WriteByte(m_taxCollectorsCount);
            writer.WriteInt(m_taxCollectorAttack);
            writer.WriteVarUhInt(m_kamas);
            writer.WriteVarUhLong(m_experience);
            writer.WriteVarUhInt(m_pods);
            writer.WriteVarUhInt(m_itemsValue);
        }
        
        public override void Deserialize(ICustomDataReader reader)
        {
            base.Deserialize(reader);
            m_maxPods = reader.ReadVarUhShort();
            m_prospecting = reader.ReadVarUhShort();
            m_wisdom = reader.ReadVarUhShort();
            m_taxCollectorsCount = reader.ReadByte();
            m_taxCollectorAttack = reader.ReadInt();
            m_kamas = reader.ReadVarUhInt();
            m_experience = reader.ReadVarUhLong();
            m_pods = reader.ReadVarUhInt();
            m_itemsValue = reader.ReadVarUhInt();
        }
    }
}
