//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18063
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Common.Protocol.Network.Messages.Game.Alliance
{
    using Common.Protocol.Network.Types.Game.Social;
    using Common.Protocol.Network.Types.Game.Context.Roleplay;
    using Common.Protocol.Network;
    using System.Collections.Generic;
    using System;
    
    
    public class AllianceFactsMessage : NetworkMessage
    {
        
        public const int Id = 6414;
        
        public override int ProtocolId
        {
            get
            {
                return Id;
            }
        }
        
        private AllianceFactSheetInformations m_infos;
        
        public virtual AllianceFactSheetInformations Infos
        {
            get
            {
                return m_infos;
            }
            set
            {
                m_infos = value;
            }
        }
        
        private List<GuildInAllianceInformations> m_guilds;
        
        public virtual List<GuildInAllianceInformations> Guilds
        {
            get
            {
                return m_guilds;
            }
            set
            {
                m_guilds = value;
            }
        }
        
        private List<System.UInt16> m_controlledSubareaIds;
        
        public virtual List<System.UInt16> ControlledSubareaIds
        {
            get
            {
                return m_controlledSubareaIds;
            }
            set
            {
                m_controlledSubareaIds = value;
            }
        }
        
        private uint m_leaderCharacterId;
        
        public virtual uint LeaderCharacterId
        {
            get
            {
                return m_leaderCharacterId;
            }
            set
            {
                m_leaderCharacterId = value;
            }
        }
        
        private string m_leaderCharacterName;
        
        public virtual string LeaderCharacterName
        {
            get
            {
                return m_leaderCharacterName;
            }
            set
            {
                m_leaderCharacterName = value;
            }
        }
        
        public void Initiate(AllianceFactSheetInformations infos, List<GuildInAllianceInformations> guilds, List<System.UInt16> controlledSubareaIds, uint leaderCharacterId, string leaderCharacterName)
        {
            m_infos = infos;
            m_guilds = guilds;
            m_controlledSubareaIds = controlledSubareaIds;
            m_leaderCharacterId = leaderCharacterId;
            m_leaderCharacterName = leaderCharacterName;
        }
        
        public override void Serialize(ICustomDataWriter writer)
        {
            writer.WriteUShort(((ushort)(m_infos.ProtocolId)));
            m_infos.Serialize(writer);
            writer.WriteShort(((short)(m_guilds.Count)));
            int guildsIndex;
            for (guildsIndex = 0; (guildsIndex < m_guilds.Count); guildsIndex = (guildsIndex + 1))
            {
                GuildInAllianceInformations objectToSend = m_guilds[guildsIndex];
                objectToSend.Serialize(writer);
            }
            writer.WriteShort(((short)(m_controlledSubareaIds.Count)));
            int controlledSubareaIdsIndex;
            for (controlledSubareaIdsIndex = 0; (controlledSubareaIdsIndex < m_controlledSubareaIds.Count); controlledSubareaIdsIndex = (controlledSubareaIdsIndex + 1))
            {
                writer.WriteVarUhShort(m_controlledSubareaIds[controlledSubareaIdsIndex]);
            }
            writer.WriteVarUhInt(m_leaderCharacterId);
            writer.WriteUTF(m_leaderCharacterName);
        }
        
        public override void Deserialize(ICustomDataReader reader)
        {
            m_infos = ProtocolManager.GetTypeInstance<AllianceFactSheetInformations>(reader.ReadUShort());
            m_infos.Deserialize(reader);
            int guildsCount = reader.ReadUShort();
            int guildsIndex;
            m_guilds = new System.Collections.Generic.List<GuildInAllianceInformations>();
            for (guildsIndex = 0; (guildsIndex < guildsCount); guildsIndex = (guildsIndex + 1))
            {
                GuildInAllianceInformations objectToAdd = new GuildInAllianceInformations();
                objectToAdd.Deserialize(reader);
                m_guilds.Add(objectToAdd);
            }
            int controlledSubareaIdsCount = reader.ReadUShort();
            int controlledSubareaIdsIndex;
            m_controlledSubareaIds = new System.Collections.Generic.List<ushort>();
            for (controlledSubareaIdsIndex = 0; (controlledSubareaIdsIndex < controlledSubareaIdsCount); controlledSubareaIdsIndex = (controlledSubareaIdsIndex + 1))
            {
                m_controlledSubareaIds.Add(reader.ReadVarUhShort());
            }
            m_leaderCharacterId = reader.ReadVarUhInt();
            m_leaderCharacterName = reader.ReadUTF();
        }
    }
}
