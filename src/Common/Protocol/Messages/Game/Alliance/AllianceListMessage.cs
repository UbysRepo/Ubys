//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18063
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Common.Protocol.Network.Messages.Game.Alliance
{
    using Common.Protocol.Network.Types.Game.Social;
    using System.Collections.Generic;
    using System;
    
    
    public class AllianceListMessage : NetworkMessage
    {
        
        public const int Id = 6408;
        
        public override int ProtocolId
        {
            get
            {
                return Id;
            }
        }
        
        private List<AllianceFactSheetInformations> m_alliances;
        
        public virtual List<AllianceFactSheetInformations> Alliances
        {
            get
            {
                return m_alliances;
            }
            set
            {
                m_alliances = value;
            }
        }
        
        public void Initiate(List<AllianceFactSheetInformations> alliances)
        {
            m_alliances = alliances;
        }
        
        public override void Serialize(ICustomDataWriter writer)
        {
            writer.WriteShort(((short)(m_alliances.Count)));
            int alliancesIndex;
            for (alliancesIndex = 0; (alliancesIndex < m_alliances.Count); alliancesIndex = (alliancesIndex + 1))
            {
                AllianceFactSheetInformations objectToSend = m_alliances[alliancesIndex];
                objectToSend.Serialize(writer);
            }
        }
        
        public override void Deserialize(ICustomDataReader reader)
        {
            int alliancesCount = reader.ReadUShort();
            int alliancesIndex;
            m_alliances = new System.Collections.Generic.List<AllianceFactSheetInformations>();
            for (alliancesIndex = 0; (alliancesIndex < alliancesCount); alliancesIndex = (alliancesIndex + 1))
            {
                AllianceFactSheetInformations objectToAdd = new AllianceFactSheetInformations();
                objectToAdd.Deserialize(reader);
                m_alliances.Add(objectToAdd);
            }
        }
    }
}
