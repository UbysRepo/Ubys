//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18063
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Common.Protocol.Network.Messages.Game.Basic
{
    using System.Collections.Generic;
    using System;
    
    
    public class TextInformationMessage : NetworkMessage
    {
        
        public const int Id = 780;
        
        public override int ProtocolId
        {
            get
            {
                return Id;
            }
        }
        
        private byte m_msgType;
        
        public virtual byte MsgType
        {
            get
            {
                return m_msgType;
            }
            set
            {
                m_msgType = value;
            }
        }
        
        private ushort m_msgId;
        
        public virtual ushort MsgId
        {
            get
            {
                return m_msgId;
            }
            set
            {
                m_msgId = value;
            }
        }
        
        private List<System.String> m_parameters;
        
        public virtual List<System.String> Parameters
        {
            get
            {
                return m_parameters;
            }
            set
            {
                m_parameters = value;
            }
        }
        
        public void Initiate(byte msgType, ushort msgId, List<System.String> parameters)
        {
            m_msgType = msgType;
            m_msgId = msgId;
            m_parameters = parameters;
        }
        
        public override void Serialize(ICustomDataWriter writer)
        {
            writer.WriteByte(m_msgType);
            writer.WriteVarUhShort(m_msgId);
            writer.WriteShort(((short)(m_parameters.Count)));
            int parametersIndex;
            for (parametersIndex = 0; (parametersIndex < m_parameters.Count); parametersIndex = (parametersIndex + 1))
            {
                writer.WriteUTF(m_parameters[parametersIndex]);
            }
        }
        
        public override void Deserialize(ICustomDataReader reader)
        {
            m_msgType = reader.ReadByte();
            m_msgId = reader.ReadVarUhShort();
            int parametersCount = reader.ReadUShort();
            int parametersIndex;
            m_parameters = new System.Collections.Generic.List<string>();
            for (parametersIndex = 0; (parametersIndex < parametersCount); parametersIndex = (parametersIndex + 1))
            {
                m_parameters.Add(reader.ReadUTF());
            }
        }
    }
}
